// 
// Generated by @himenon/openapi-typescript-code-generator v0.1.7
// 
// OpenApi : 3.0.3
// 
// 


/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiAnalyticsLog {
    "application/json": {
        action_type?: string;
        target_id?: string;
        payload?: {
            target_detail?: {
                event_type?: string;
                event_id?: string;
            };
        };
    }[];
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiAnalyticsLog$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiAppAdd_my_app {
    "application/json": {
        app_ids?: string[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiAppAdd_my_app$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        my_app_num?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiAppApp_user_detail {
    app_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiAppApp_user_detail$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        url?: string;
        name?: string;
        user_id?: string;
        is_published_user_id?: number;
        is_published_url?: number;
        message?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiAppAppeal_banners {
    app_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiAppAppeal_banners$Status$200 {
    "application/json": {
        banners?: Record<string, unknown>[];
        icon_url?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        title?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiAppDelete_app_user_detail {
    "application/x-www-form-urlencoded": {
        app_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiAppDelete_app_user_detail$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiAppDelete_my_app {
    "application/json": {
        app_ids?: string[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiAppDelete_my_app$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        my_app_num?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiAppMy_app {
    user_id?: number;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiAppMy_app$Status$200 {
    "application/json": {
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_page?: string;
        apps?: {
            app_user_detail?: {
                name?: string;
                url?: string;
                user_id?: string;
                is_published_user_id?: number;
                message?: string;
                is_published_url?: number;
            };
            is_my_app?: number;
            store_url?: string;
            icon_url?: string;
            is_holding_campaign?: number;
            is_app_user_id_hidden?: number;
            app_id?: string;
            request_app_user_id_registration?: boolean;
            is_category?: number;
            short_title?: string;
            id?: number;
            title?: string;
            push_enabled?: string;
            app_user_id_label?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiAppOnlive_apps$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        apps?: {
            icon_url?: string;
            store_url?: string;
            app_id?: string;
            is_app_user_id_hidden?: number;
            is_holding_campaign?: number;
            short_title?: string;
            is_category?: number;
            title?: string;
            id?: string;
            app_user_id_label?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiAppPost_app_user_detail {
    "application/x-www-form-urlencoded": {
        app_id?: string;
        confirmed?: string;
        type?: string;
        value?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiAppPost_app_user_detail$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        name?: string;
        is_published_url?: number;
        message?: string;
        require_confirmation?: number;
        url?: string;
        user_id?: string;
        is_published_user_id?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiAppRecommend_apps$Status$200 {
    "application/json": {
        appeal_banner?: Record<string, unknown> | null;
        apps?: {
            app_id?: string;
            app_user_detail?: {
                is_published_url?: number;
                is_published_user_id?: number;
                message?: string;
                name?: string;
                url?: string;
                user_id?: string;
            };
            app_user_id_label?: string;
            icon_url?: string;
            id?: number;
            is_app_user_id_hidden?: number;
            is_category?: number;
            is_holding_campaign?: number;
            is_my_app?: number;
            request_app_user_id_registration?: boolean;
            short_title?: string;
            store_url?: string;
            title?: string;
        }[];
        is_skip_enabled?: boolean;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiAppSearch {
    recommend_by?: string;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiAppSearch$Status$200 {
    "application/json": {
        apps?: {
            app_id?: string;
            app_user_detail?: {
                is_published_url?: number;
                is_published_user_id?: number;
                message?: string;
                name?: string;
                url?: string;
                user_id?: string;
            };
            app_user_id_label?: string;
            icon_url?: string;
            id?: number;
            is_app_user_id_hidden?: number;
            is_category?: number;
            is_holding_campaign?: number;
            is_my_app?: number;
            request_app_user_id_registration?: boolean;
            short_title?: string;
            store_url?: string;
            title?: string;
        }[];
        current_page?: number;
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiAppUser_apps {
    user_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiAppUser_apps$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        request_user_id?: string;
        apps?: {
            app_user_detail?: {
                name?: string;
                url?: string;
                user_id?: string;
                is_published_user_id?: number;
                message?: string;
                is_published_url?: number;
            };
            is_my_app?: number;
            store_url?: string;
            icon_url?: string;
            is_holding_campaign?: number;
            is_app_user_id_hidden?: number;
            app_id?: string;
            request_app_user_id_registration?: boolean;
            is_category?: number;
            short_title?: string;
            id?: number;
            title?: string;
            push_enabled?: string;
            app_user_id_label?: string;
        }[];
        next_cursor?: string;
        current_cursor?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCampaignCompleted_mission {
    id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCampaignCompleted_mission$Status$200 {
    "application/json": {
        campaign_title?: string;
        missions?: {
            achievement_cond?: string;
            achievement_cond_type?: number;
            condition?: Record<string, unknown> | null;
            description?: string;
            id?: number;
            inactivation_text?: string;
            is_inactivation?: number;
            mission_type?: number;
            prize_grant_type?: number;
            prizes?: {
                prize_image_url?: string;
                prize_name?: string;
                prize_num?: string;
            }[];
            progress_status?: {
                current?: number;
                is_completed?: number;
                max?: number;
            };
            progress_type?: number;
            receive_status?: number;
            requires_continuous_streamer?: number;
            title?: string;
        }[];
        prize_delivery_dates?: {
            broadcast?: string;
            share?: string;
            view?: string;
        };
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCampaignDetail {
    id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCampaignDetail$Status$200 {
    "application/json": {
        app?: {
            app_id?: string;
            app_user_id?: string;
            app_user_id_label?: string;
            download_button_label?: string;
            download_url?: string;
            icon_url?: string;
            id?: number;
            is_app_user_id_hidden?: number;
            is_published_user_id?: number;
            other_site_1?: string;
            other_site_1_name?: string;
            other_site_2?: string;
            other_site_2_name?: string;
            site_url?: string;
            title?: string;
            twitter_url?: string;
            use_app_user_id?: number;
            youtube_url?: string;
        };
        app_user_id_registration_date?: string;
        app_user_id_registration_notes?: string;
        broadcast_awards?: {
            missions?: {
                achievement_cond?: string;
                achievement_cond_type?: number;
                condition?: Record<string, unknown> | null;
                description?: string;
                id?: number;
                inactivation_text?: string;
                is_inactivation?: number;
                mission_type?: number;
                prize_grant_type?: number;
                prizes?: {
                    prize_image_url?: string;
                    prize_name?: string;
                    prize_num?: string;
                }[];
                progress_status?: {
                    current?: number;
                    is_completed?: number;
                    max?: number;
                };
                progress_type?: number;
                receive_status?: number;
                requires_continuous_streamer?: number;
                title?: string;
            }[];
            notes?: string[];
            prize_delivery_date?: string;
        };
        campaign_icon_url?: string;
        copyrights?: Record<string, unknown>[];
        disclaimers?: string[];
        link?: Record<string, unknown> | null;
        notes?: string[];
        period?: string;
        period_notes?: string;
        share_twitter?: {
            card?: {
                description?: string;
                image_url?: string;
                site?: string;
                title?: string;
            };
            maxlength?: number;
            placeholder?: string;
            text?: string;
        };
        sharing_award?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        title?: string;
        title_image_url?: string;
        user_inputs?: Record<string, unknown>[];
        user_inputs_updated?: boolean;
        viewing_awards?: {
            missions?: {
                achievement_cond?: string;
                achievement_cond_type?: number;
                condition?: Record<string, unknown> | null;
                description?: string;
                id?: number;
                inactivation_text?: string;
                is_inactivation?: number;
                mission_type?: number;
                prize_grant_type?: number;
                prizes?: {
                    prize_image_url?: string;
                    prize_name?: string;
                    prize_num?: string;
                }[];
                progress_status?: {
                    current?: number;
                    is_completed?: number;
                    max?: number;
                };
                progress_type?: number;
                receive_status?: number;
                requires_continuous_streamer?: number;
                title?: string;
            }[];
            notes?: string[];
            prize_delivery_date?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCatalogBanners {
    tab_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCatalogBanners$Status$200 {
    "application/json": {
        banners?: {
            ad_content_url?: string;
            banner_image_url?: string;
            description?: string;
            link_url?: string;
            subtitle?: string;
            title?: string;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCatalogFollow$Status$200 {
    "application/json": {
        current_cursor?: string;
        list?: {
            archive?: {
                app_icon_urls?: string[];
                app_id?: string;
                archive_status?: number;
                avatar_body_image_url?: string;
                blur_image_url?: string;
                collab_user_profile_image_urls?: Record<string, unknown>[];
                ended_at?: number;
                following_viewer_image_urls?: Record<string, unknown>[];
                following_viewer_num?: number;
                has_recording?: boolean;
                image_url?: string;
                is_collab?: boolean;
                is_live?: boolean;
                is_nuu_welcome?: boolean;
                is_omotenashi?: boolean;
                is_private?: boolean;
                joined_live_thumbnail_image_url?: string;
                live_id?: string;
                orientation_v2?: number;
                owner?: {
                    badges?: {
                        image_url?: string;
                        small_image_url?: string;
                    }[];
                    is_new?: boolean;
                    name?: string;
                    profile_frame_image_url?: string;
                    profile_image_url?: string;
                    season_rating?: {
                        class_name?: string;
                        icon_url?: string;
                    };
                    user_id?: string;
                    yell_level?: number;
                    yell_rank?: number;
                };
                preview?: Record<string, unknown> | null;
                private_invited_user_image_urls?: Record<string, unknown>[];
                private_invited_user_num?: number;
                private_viewer_image_urls?: Record<string, unknown>[];
                private_viewer_num?: number;
                recommend?: Record<string, unknown> | null;
                started_at?: number;
                thumbnail_frame?: {
                    icon_url?: string;
                    id?: number;
                    left_thumbnail_image_url?: string;
                    right_thumbnail_animation_url?: string;
                    right_thumbnail_image_url?: string;
                };
                title?: string;
                total_viewer_num?: number;
                user_app_status?: Record<string, unknown>[];
                user_label_image_url?: string;
            };
            log_id?: string;
            type?: string;
        }[];
        next_cursor?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCatalogLives {
    tab_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCatalogLives$Status$200 {
    "application/json": {
        current_cursor?: string;
        lives?: {
            app_icon_urls?: string[];
            app_id?: string;
            archive_status?: number;
            avatar_body_image_url?: string;
            blur_image_url?: string;
            collab_user_profile_image_urls?: Record<string, unknown>[];
            ended_at?: number;
            following_viewer_image_urls?: Record<string, unknown>[];
            following_viewer_num?: number;
            has_recording?: boolean;
            image_url?: string;
            is_collab?: boolean;
            is_following?: boolean;
            is_live?: boolean;
            is_lucky_coin_box_available?: boolean;
            is_nuu_welcome?: boolean;
            is_omotenashi?: boolean;
            is_private?: boolean;
            joined_live_thumbnail_image_url?: string;
            live_id?: string;
            live_tags?: Record<string, unknown>[];
            log_id?: string;
            orientation_v2?: number;
            owner?: {
                badges?: {
                    image_url?: string;
                    small_image_url?: string;
                }[];
                is_new?: boolean;
                name?: string;
                profile_frame_image_url?: string;
                profile_image_url?: string;
                season_rating?: {
                    class_name?: string;
                    icon_url?: string;
                };
                user_id?: string;
                yell_level?: number;
                yell_rank?: number;
            };
            preview?: {
                streaming_url_edge?: string;
                streaming_url_hls?: string;
            };
            recommend?: Record<string, unknown> | null;
            relation?: string;
            started_at?: number;
            thumbnail_frame?: Record<string, unknown> | null;
            title?: string;
            total_viewer_num?: number;
            user_app_status?: Record<string, unknown>[];
            user_label_image_url?: string;
        }[];
        next_cursor?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCatalogMyapp_recommend_lives$Status$200 {
    "application/json": {
        current_cursor?: string;
        lives?: Record<string, unknown>[];
        next_cursor?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCatalogTabs$Status$200 {
    "application/json": {
        default_tab_id?: string;
        is_visible_tab?: boolean;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        tabs?: {
            tab_id?: string;
            tab_name?: string;
            tab_page_id?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiChatJoin {
    "application/x-www-form-urlencoded": {
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiChatJoin$Status$200 {
    "application/json": {
        broadcast_key?: string;
        last_read_messages?: {
            last_read_message_id?: string;
            invited_message_id?: string;
            user_id?: string;
        }[];
        broadcast_port?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_kicked_by?: string;
        broadcast_secret?: string;
        broadcast_host?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiChatPost_text {
    "application/x-www-form-urlencoded": {
        text?: string;
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiChatPost_text$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiChatRead {
    "application/x-www-form-urlencoded": {
        last_message_id?: string;
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiChatRead$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiChatThread {
    user_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiChatThread$Status$200 {
    "application/json": {
        messages?: {
            created_at?: string;
            text?: {
                body?: string;
                avatar_image_url?: string;
                user_name?: string;
            };
            user_id?: string;
            type?: string;
            id?: string;
        }[];
        thread?: {
            is_visible?: number;
            image_urls?: string[];
            user_id?: string;
            title?: string;
            push_enabled?: string;
        };
        has_old?: number;
        chat_entire_push_enabled?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_kicked_by?: string;
        has_new?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiChatThread_visibility {
    "application/x-www-form-urlencoded": {
        group_id?: string;
        is_visible?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiChatThread_visibility$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiChatThreads {
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiChatThreads$Status$200 {
    "application/json": {
        chat_status?: {
            is_enabled?: boolean;
            require_generation?: boolean;
            require_birthday?: boolean;
            is_cheer_club_enabled?: boolean;
            require_cheer_chat_confirmation_agreement?: boolean;
            require_chat_confirmation_agreement?: boolean;
        };
        next_page?: Record<string, unknown> | null;
        chat_entire_push_enabled?: string;
        previous_page?: Record<string, unknown> | null;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_page?: number;
        threads?: {
            last_posted_at?: string;
            last_message?: string;
            unread_num?: string;
            is_visible?: number;
            is_new?: number;
            image_urls?: string[];
            user_id?: string;
            title?: string;
            push_enabled?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiClosetAvatar {
    user_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiClosetAvatar$Status$200 {
    "application/json": {
        avatar?: {
            back_wing?: Record<string, unknown> | null;
            background?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            beard?: Record<string, unknown> | null;
            beard_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            body_id?: string;
            both_weapon?: Record<string, unknown> | null;
            bottoms?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            center_interior?: Record<string, unknown> | null;
            cheek?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            cheek_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            companion_hat?: Record<string, unknown> | null;
            companion_scarf?: Record<string, unknown> | null;
            companion_tops?: Record<string, unknown> | null;
            companion_type?: Record<string, unknown> | null;
            earring?: Record<string, unknown> | null;
            effect?: Record<string, unknown> | null;
            eye?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            eye_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            eyebrow?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            eyebrow_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            eyeshadow?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            eyeshadow_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            face_paint?: Record<string, unknown> | null;
            front_center_interior?: Record<string, unknown> | null;
            front_left_interior?: Record<string, unknown> | null;
            front_right_interior?: Record<string, unknown> | null;
            glasses_v2?: Record<string, unknown> | null;
            hair?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            hair_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            hair_ornament?: Record<string, unknown> | null;
            hat_v2?: Record<string, unknown> | null;
            head?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            head_band?: Record<string, unknown> | null;
            kemomimi?: Record<string, unknown> | null;
            left_interior?: Record<string, unknown> | null;
            left_weapon?: Record<string, unknown> | null;
            lip?: Record<string, unknown> | null;
            lip_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            machine?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: {
                    accel?: number;
                    avatar_part_id?: number;
                    description?: string;
                    effect_command?: string;
                    effect_type?: number;
                    effect_value?: number;
                    game_item_type?: number;
                    gift_event_id?: number;
                    image_url?: string;
                    part_sub_title?: string;
                    part_title?: string;
                    power?: number;
                    spec_description?: string;
                    spec_title?: string;
                    speed?: number;
                    weight?: number;
                };
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            mask?: Record<string, unknown> | null;
            motion1?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            motion2?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            motion3?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            motion4?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            mouth?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            nail?: Record<string, unknown> | null;
            necklace?: Record<string, unknown> | null;
            nose?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            onepiece?: Record<string, unknown> | null;
            persona?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            pet?: Record<string, unknown> | null;
            pose?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            proportion?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            right_interior?: Record<string, unknown> | null;
            right_weapon?: Record<string, unknown> | null;
            ring?: Record<string, unknown> | null;
            scarf?: Record<string, unknown> | null;
            setup_clothes?: Record<string, unknown> | null;
            shoes?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            skin_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            socks?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            tail?: Record<string, unknown> | null;
            tops?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            wrist?: Record<string, unknown> | null;
        };
        closet?: Record<string, unknown> | null;
        is_epos_card_slot_available?: boolean;
        share_text?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiClosetAvatar_parts$Status$200 {
    "application/json": {
        backgrounds?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        beard_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        bodies?: {
            back_wings?: Record<string, unknown>[];
            beards?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            bottoms?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            center_interiors?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            cheeks?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            effects?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            eyebrows?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            eyes?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            eyeshadows?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            face_paints?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            glasses?: Record<string, unknown>[];
            hairs?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            hats?: Record<string, unknown>[];
            heads?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            icon_url?: string;
            id?: string;
            left_interiors?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            lips?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            mouths?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            noses?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            onepieces?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            personas?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            pets?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            proportions?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            right_interiors?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            scarfs?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            setup_clothes?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            shoes?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            socks?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            tails?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            tops?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            weapons?: Record<string, unknown>[];
            wings?: Record<string, unknown>[];
        }[];
        both_weapons?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        cheek_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        companion?: {
            hats?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            scarfs?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            tops?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
            types?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            }[];
        };
        earrings?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        eye_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        eyebrow_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        eyeshadow_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        free_part_types?: Record<string, unknown>[];
        front_center_interiors?: Record<string, unknown>[];
        front_left_interiors?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        front_right_interiors?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        glasses_v2?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        hair_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        hair_ornaments?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        hats_v2?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        head_bands?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        kemomimis?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        left_weapons?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        lip_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        machines?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: {
                accel?: number;
                avatar_part_id?: number;
                description?: string;
                effect_command?: string;
                effect_type?: number;
                effect_value?: number;
                game_item_type?: number;
                gift_event_id?: number;
                image_url?: string;
                part_sub_title?: string;
                part_title?: string;
                power?: number;
                spec_description?: string;
                spec_title?: string;
                speed?: number;
                weight?: number;
            };
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        masks?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        motions?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        nails?: Record<string, unknown>[];
        necklaces?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        poses?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        remaining_coins?: number;
        remaining_kandumes?: number;
        right_weapons?: {
            add_part_text_enabled?: number;
            asset_bundle_name?: string;
            asset_bundle_prefab_name?: string;
            banner_image_url?: string;
            banner_link?: string;
            exclude_parts?: Record<string, unknown>[];
            game_effect?: Record<string, unknown> | null;
            gender_id?: number;
            help_image_url?: string;
            icon_url?: string;
            id?: number;
            is_buyable?: number;
            is_limited_time?: number;
            is_trial?: boolean;
            name?: string;
            part_text?: string;
            part_title?: string;
            position?: string;
            rarity?: number;
            required_coin?: number;
            required_kandume?: number;
            updated_at?: number;
            url?: string;
            value?: string;
        }[];
        rings?: Record<string, unknown>[];
        skin_colors?: {
            end?: number;
            id?: number;
            percentage?: number;
            start?: number;
            updated_at?: number;
            value?: number;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        user_avatar_parts_num?: number;
        wrists?: Record<string, unknown>[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiClosetClosets$Status$200 {
    "application/json": {
        closet_slot_num?: number;
        closets?: Record<string, unknown>[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiClosetUpdate_closet_avatar {
    "application/json": {
        motion4_id?: string;
        lip_color_id?: string;
        beard_color_percentage?: string;
        eyebrow_color_percentage?: string;
        pose_id?: string;
        persona_id?: string;
        eyeshadow_color_percentage?: string;
        socks_id?: string;
        head_id?: string;
        cheek_color_percentage?: string;
        machine_id?: string;
        eyebrow_color_id?: string;
        body_id?: string;
        lip_color_percentage?: string;
        proportion_id?: string;
        skin_color_id?: string;
        cheek_color_id?: string;
        cheek_id?: string;
        eye_id?: string;
        eyebrow_id?: string;
        bottoms_id?: string;
        hair_color_id?: string;
        mouth_id?: string;
        eye_color_percentage?: string;
        beard_color_id?: string;
        nose_id?: string;
        background_id?: string;
        eyeshadow_color_id?: string;
        hair_color_percentage?: string;
        hair_id?: string;
        eye_color_id?: string;
        tops_id?: string;
        setup_clothes_id?: string;
        eyeshadow_id?: string;
        motion3_id?: string;
        motion1_id?: string;
        motion2_id?: string;
        closet_id?: string;
        shoes_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiClosetUpdate_closet_avatar$Status$200 {
    "application/json": {
        avatar?: {
            back_wing?: Record<string, unknown> | null;
            background?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            beard?: Record<string, unknown> | null;
            beard_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            body_id?: string;
            both_weapon?: Record<string, unknown> | null;
            bottoms?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            center_interior?: Record<string, unknown> | null;
            cheek?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            cheek_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            companion_hat?: Record<string, unknown> | null;
            companion_scarf?: Record<string, unknown> | null;
            companion_tops?: Record<string, unknown> | null;
            companion_type?: Record<string, unknown> | null;
            earring?: Record<string, unknown> | null;
            effect?: Record<string, unknown> | null;
            eye?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            eye_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            eyebrow?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            eyebrow_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            eyeshadow?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            eyeshadow_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            face_paint?: Record<string, unknown> | null;
            front_center_interior?: Record<string, unknown> | null;
            front_left_interior?: Record<string, unknown> | null;
            front_right_interior?: Record<string, unknown> | null;
            glasses_v2?: Record<string, unknown> | null;
            hair?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            hair_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            hair_ornament?: Record<string, unknown> | null;
            hat_v2?: Record<string, unknown> | null;
            head?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            head_band?: Record<string, unknown> | null;
            kemomimi?: Record<string, unknown> | null;
            left_interior?: Record<string, unknown> | null;
            left_weapon?: Record<string, unknown> | null;
            lip?: Record<string, unknown> | null;
            lip_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            machine?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: {
                    accel?: number;
                    avatar_part_id?: number;
                    description?: string;
                    effect_command?: string;
                    effect_type?: number;
                    effect_value?: number;
                    game_item_type?: number;
                    gift_event_id?: number;
                    image_url?: string;
                    part_sub_title?: string;
                    part_title?: string;
                    power?: number;
                    spec_description?: string;
                    spec_title?: string;
                    speed?: number;
                    weight?: number;
                };
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            mask?: Record<string, unknown> | null;
            motion1?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            motion2?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            motion3?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            motion4?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            mouth?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            nail?: Record<string, unknown> | null;
            necklace?: Record<string, unknown> | null;
            nose?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            onepiece?: Record<string, unknown> | null;
            persona?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            pet?: Record<string, unknown> | null;
            pose?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            proportion?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            right_interior?: Record<string, unknown> | null;
            right_weapon?: Record<string, unknown> | null;
            ring?: Record<string, unknown> | null;
            scarf?: Record<string, unknown> | null;
            setup_clothes?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            shoes?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            skin_color?: {
                end?: number;
                id?: number;
                percentage?: number;
                start?: number;
                updated_at?: number;
                value?: number;
            };
            socks?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            tail?: Record<string, unknown> | null;
            tops?: {
                add_part_text_enabled?: number;
                asset_bundle_name?: string;
                asset_bundle_prefab_name?: string;
                banner_image_url?: string;
                banner_link?: string;
                exclude_parts?: Record<string, unknown>[];
                game_effect?: Record<string, unknown> | null;
                gender_id?: number;
                help_image_url?: string;
                icon_url?: string;
                id?: number;
                is_buyable?: number;
                is_limited_time?: number;
                is_trial?: boolean;
                name?: string;
                part_text?: string;
                part_title?: string;
                position?: string;
                rarity?: number;
                required_coin?: number;
                required_kandume?: number;
                updated_at?: number;
                url?: string;
                value?: string;
            };
            wrist?: Record<string, unknown> | null;
        };
        closet?: {
            avatar_background_image_url?: string;
            avatar_body_image_url?: string;
            avatar_face_image_url?: string;
            closet_id?: number;
            name?: string;
            updated_at?: number;
        };
        is_epos_card_slot_available?: boolean;
        share_text?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiClosetUpdate_closet_images {
    "application/x-www-form-urlencoded": {
        i?: string;
        C?: string;
        k?: string;
        Tu?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiClosetUpdate_closet_images$Status$200 {
    "application/json": {
        closet?: {
            avatar_background_image_url?: string;
            avatar_body_image_url?: string;
            avatar_face_image_url?: string;
            closet_id?: number;
            name?: string;
            updated_at?: number;
        };
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCoin_boxStatus {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCoin_boxStatus$Status$200 {
    "application/json": {
        box_status?: {
            box_availability_status?: number;
            open_count?: number;
            open_count_by_streamer?: number;
        };
        comment_threshold?: number;
        lp_url?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        watching_time_threshold?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCollabCollaborating_users {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCollabCollaborating_users$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        users?: Record<string, unknown>[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiContractSummary$Status$200 {
    "application/json": {
        account_status?: number;
        account_url?: string;
        broadcast_fee?: {
            cash?: number;
            cash_unit?: number;
            class_id?: number;
            monthly_cash_limit?: number;
        };
        cash?: number;
        coin_from_cash?: number;
        contract_accept_end_date?: number;
        contract_accept_start_date?: number;
        contract_cash_rate?: number;
        contract_coin_rate?: number;
        contract_grade?: number;
        contract_month?: number;
        contract_month_end_date?: number;
        contract_month_pay_date?: number;
        contract_month_start_date?: number;
        contract_status?: number;
        current_cash_rate?: number;
        current_cash_rate_v2?: {
            app?: number;
            web?: number;
        };
        current_coin_rate?: number;
        current_contract_status?: number;
        current_grade?: number;
        current_month?: number;
        current_month_end_date?: number;
        current_month_pay_date?: number;
        current_month_start_date?: number;
        current_next_pay_date?: number;
        current_payment_type?: number;
        free_coin_change_rate?: number;
        gift?: {
            cash?: number;
        };
        how_to_page_url?: string;
        is_contract_enable?: boolean;
        is_handover_code_required?: boolean;
        is_visible_history?: boolean;
        is_visible_ranking?: boolean;
        kyc_status?: number;
        kyc_url?: string;
        main_image_url?: string;
        paid_cash?: number;
        paid_coin_change_rates?: Record<string, unknown>[];
        payment_start_date?: number;
        payment_type?: number;
        ranking_grade?: number;
        ranking_month?: number;
        ranking_month_end_date?: number;
        ranking_month_from_date?: number;
        ranking_month_start_date?: number;
        ranking_month_to_date?: number;
        ranking_rank?: number;
        ranking_score?: number;
        season?: {
            class_end?: number;
            class_id?: number;
            class_start?: number;
            current?: number;
            month?: number;
            season_duration?: string;
        };
        star?: Record<string, unknown> | null;
        star_category?: number;
        star_page_url?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        tax?: number;
        terms_page_url?: string;
        total_cash?: number;
        valid_payment_start_date?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiEventNotice {
    type?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiEventNotice$Status$200 {
    "application/json": {
        latest_gacha_started_at?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        display_timing?: {
            non_display?: number;
            next?: number;
            live_start?: number;
        };
        banners?: {
            icon_url?: string;
            url?: string;
            button_text?: string;
            type?: number;
            title?: string;
            description?: string;
            is_focus?: boolean;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiFeatureRegister_device_token {
    "application/x-www-form-urlencoded": {
        device_token?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiFeatureRegister_device_token$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGiftEmomo_run_gifts$Status$200 {
    "application/json": {
        gifts?: {
            coins?: number;
            id?: string;
            large_image_url?: string;
            small_image_url?: string;
            title?: string;
            type?: number;
        }[];
        help_page_url?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGiftPanels {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGiftPanels$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        panels?: {
            banner?: Record<string, unknown> | null;
            icon_url?: string;
            is_focus?: boolean;
            reason_id?: number;
            gifts?: {
                small_image_url?: string;
                panel_reason_id?: number;
                tickets?: number;
                coins?: number;
                locked_message?: string;
                panel_type?: number;
                large_image_url?: string;
                pre_discount_coins?: number;
                bonus_image_url?: string;
                event_icon_url?: string;
                is_paid_coin_only?: boolean;
                id?: string;
                type?: number;
                title?: string;
            }[];
            id?: string;
            type?: number;
            title?: string;
            live_game_id?: string;
        }[];
        streamer_watchword?: Record<string, unknown> | null;
        default_index?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGiftRanking {
    live_id?: string;
    type?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGiftRanking$Status$200 {
    "application/json": {
        obfuscated_user_id?: Record<string, unknown> | null;
        current_user_rank?: {
            yell_level?: number;
            point?: number;
            yell_rank?: number;
            user?: {
                share_url?: string;
                profile_image_url?: string;
                name?: string;
                description?: string;
                properties?: Record<string, unknown>[];
                badges?: Record<string, unknown>[];
                profile_frame_image_url?: string;
                is_continuous_streamer?: number;
                is_new?: number;
                catalog_label_image_url?: string;
                is_cheerleader?: number;
                user_id?: string;
                season_rating?: {
                    class_name?: string;
                    icon_url?: string;
                };
                onlive?: Record<string, unknown> | null;
            };
            rank?: number;
        };
        ranking?: {
            yell_level?: number;
            point?: number;
            yell_rank?: number;
            user?: {
                share_url?: string;
                profile_image_url?: string;
                name?: string;
                description?: string;
                properties?: Record<string, unknown>[];
                badges?: Record<string, unknown>[];
                profile_frame_image_url?: string;
                is_continuous_streamer?: number;
                is_new?: number;
                catalog_label_image_url?: string;
                is_cheerleader?: number;
                user_id?: string;
                season_rating?: {
                    class_name?: string;
                    icon_url?: string;
                };
                onlive?: Record<string, unknown> | null;
            };
        }[];
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        next_cursor?: string;
        current_cursor?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGiftSend {
    "application/x-www-form-urlencoded": {
        count?: string;
        gift_id?: string;
        live_id?: string;
        message?: string;
        panel_reason_id?: string;
        panel_type?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGiftSend$Status$200 {
    "application/json": {
        remaining_free_coins?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        remaining_tickets?: {
            ticket_gift_gacha?: number;
            ticket_roulette?: number;
            ticket_ranking?: number;
        };
        is_app_mutual_gift_event_achieved?: boolean;
        remaining_paid_coins?: number;
        remaining_coins?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGiftUnique_emomo_gift_config$Status$200 {
    "application/json": {
        presets?: {
            default_texts?: {
                index?: number;
                unity_font_name?: string;
                text?: string;
                font_id?: number;
            }[];
            image_url?: string;
            unity_preset_name?: string;
            text_num?: number;
            text_length?: number;
            fonts?: {
                unity_font_name?: string;
                outline_color?: string;
                font_id?: number;
                text_color?: string;
            }[];
            preset_id?: number;
        }[];
        badge_image_url?: string;
        stamp_gift?: {
            icon_url?: string;
            coins?: number;
        };
        rich_gift?: {
            icon_url?: string;
            coins?: number;
        };
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        header_image_url?: string;
        colors?: {
            outline_color?: string;
            color_id?: number;
            text_color?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGiftUnique_emomo_gift_slots$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        slots?: {
            is_empty?: number;
            image_url?: string;
            name?: string;
            type?: number;
            slot_id?: number;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGiftUpdate_simple_unique_emomo_gift {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGiftUpdate_simple_unique_emomo_gift$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGift_appeal_popupRead {
    "application/x-www-form-urlencoded": {
        gift_appeal_popup_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGift_appeal_popupRead$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        result?: {
            gift_appeal_popup_id?: number;
            user_id?: number;
            last_updated_at?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGoogleConnect {
    "application/x-www-form-urlencoded": {
        id_token?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGoogleConnect$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGoogleDisconnect$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGraphBlock {
    "application/x-www-form-urlencoded": {
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGraphBlock$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGraphBlocked_users {
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGraphBlocked_users$Status$200 {
    "application/json": {
        blocked_users?: {
            badges?: {
                image_url?: string;
                small_image_url?: string;
            }[];
            catalog_label_image_url?: string;
            description?: string;
            is_able_continuous_stream_holiday?: number;
            is_blocking?: number;
            is_cheerleader?: number;
            is_continuous_streamer?: number;
            is_follower?: number;
            is_following?: number;
            is_moderator?: number;
            is_new?: number;
            name?: string;
            onlive?: {
                duration?: number;
                live_id?: string;
                title?: string;
            };
            profile_image_url?: string;
            properties?: Record<string, unknown>[];
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            share_url?: string;
            user_id?: string;
        }[];
        current_page?: number;
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGraphFollow {
    "application/x-www-form-urlencoded": {
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGraphFollow$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGraphFollowers {
    user_id?: number;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGraphFollowers$Status$200 {
    "application/json": {
        current_page?: number;
        followers?: {
            badges?: {
                image_url?: string;
                small_image_url?: string;
            }[];
            catalog_label_image_url?: string;
            description?: string;
            is_blocking?: number;
            is_cheerleader?: number;
            is_continuous_streamer?: number;
            is_follower?: number;
            is_following?: number;
            is_moderator?: number;
            is_new?: number;
            name?: string;
            onlive?: Record<string, unknown> | null;
            profile_image_url?: string;
            properties?: Record<string, unknown>[];
            push_enabled?: number;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            share_url?: string;
            user_id?: string;
        }[];
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGraphFollowings {
    user_id?: number;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGraphFollowings$Status$200 {
    "application/json": {
        current_page?: number;
        followings?: {
            badges?: {
                image_url?: string;
                small_image_url?: string;
            }[];
            description?: string;
            is_blocking?: number;
            is_cheerleader?: number;
            is_continuous_streamer?: number;
            is_follower?: number;
            is_following?: number;
            is_moderator?: number;
            is_new?: number;
            name?: string;
            onlive?: Record<string, unknown> | null;
            profile_image_url?: string;
            properties?: Record<string, unknown>[];
            push_enabled?: number;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            share_url?: string;
            user_id?: string;
        }[];
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGraphRecommend_users {
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGraphRecommend_users$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        users?: {
            share_url?: string;
            profile_image_url?: string;
            badges?: Record<string, unknown>[];
            is_new?: number;
            is_moderator?: number;
            is_follower?: number;
            is_cheerleader?: number;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            reason?: Record<string, unknown> | null;
            name?: string;
            description?: string;
            properties?: Record<string, unknown>[];
            is_continuous_streamer?: number;
            profile_frame_image_url?: string;
            is_blocking?: number;
            is_following?: number;
            user_id?: string;
            onlive?: Record<string, unknown> | null;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGraphSearch {
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGraphSearch$Status$200 {
    "application/json": {
        current_page?: number;
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        users?: {
            badges?: {
                image_url?: string;
                small_image_url?: string;
            }[];
            catalog_label_image_url?: string;
            description?: string;
            is_able_continuous_stream_holiday?: number;
            is_blocking?: number;
            is_cheerleader?: number;
            is_continuous_streamer?: number;
            is_follower?: number;
            is_following?: number;
            is_moderator?: number;
            is_new?: number;
            name?: string;
            onlive?: Record<string, unknown> | null;
            profile_image_url?: string;
            properties?: Record<string, unknown>[];
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            share_url?: string;
            user_id?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGraphUnblock {
    "application/x-www-form-urlencoded": {
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGraphUnblock$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGraphUnfollow {
    "application/x-www-form-urlencoded": {
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGraphUnfollow$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGroupEdit {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGroupEdit$Status$200 {
    "application/json": {
        group?: {
            name_edited?: number;
            image_urls?: string[];
            name?: string;
            user_num?: string;
            id?: string;
        };
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGroupInvite_users {
    "application/x-www-form-urlencoded": {
        user_ids?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGroupInvite_users$Status$200 {
    "application/json": {
        group?: {
            name_edited?: number;
            image_urls?: string[];
            name?: string;
            user_num?: string;
            id?: string;
        };
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGroupLeave {
    "application/x-www-form-urlencoded": {
        group_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGroupLeave$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGroupUsers {
    group_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGroupUsers$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        users?: {
            profile_image_url?: string;
            name?: string;
            user_id?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveAppeal_links {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveAppeal_links$Status$200 {
    "application/json": {
        links?: Record<string, unknown>[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveCampaign {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveCampaign$Status$200 {
    "application/json": {
        campaign?: Record<string, unknown> | null;
        completed_mission_counts?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveGet_streaming_url {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveGet_streaming_url$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLeave {
    "application/x-www-form-urlencoded": {
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLeave$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveLive {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveLive$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        streaming_url_hls?: string;
        is_streaming_collab_enabled?: number;
        is_gift_supported?: number;
        streaming_url_llstream_video?: string;
        mirroring?: {
            reason?: string;
            enabled?: number;
        };
        user_app_status?: Record<string, unknown>[];
        live_id?: string;
        app?: {
            app_user_detail?: {
                name?: string;
                url?: string;
                user_id?: string;
                is_published_user_id?: number;
                message?: string;
                is_published_url?: number;
            };
            is_my_app?: number;
            icon_url?: string;
            store_url?: string;
            app_id?: string;
            is_app_user_id_hidden?: number;
            is_holding_campaign?: number;
            short_title?: string;
            is_category?: number;
            title?: string;
            id?: number;
            app_user_id_label?: string;
        };
        is_mirrorable?: number;
        app_title?: string;
        description?: string;
        total_viewer_num?: number;
        thumbnail_image_url?: string;
        is_archive?: number;
        is_singing_karaoke?: number;
        title?: string;
        tutorial_mission?: {
            enable_mission?: boolean;
            is_first_mission_cleared?: boolean;
            unreceived_mission_num?: number;
        };
        max_online_viewer_num?: number;
        is_emomo_visible?: boolean;
        created_at?: number;
        is_live?: number;
        started_at?: number;
        preview_blur_image_url?: string;
        blur_image_url?: string;
        live_mos?: Record<string, unknown> | null;
        thumbnail_blur_image_url?: string;
        image_url_without_letterbox?: string;
        user_level?: Record<string, unknown>;
        is_connected_streaming_collab?: number;
        recommended_gifts?: {
            large_image_url?: string;
            is_paid_coin_only?: boolean;
            small_image_url?: string;
            title?: string;
            id?: string;
            coins?: string;
        }[];
        nuu_welcome_live_game?: Record<string, unknown> | null;
        diamonds?: string;
        joined_live_thumbnail_image_url?: string;
        is_enabled_photo_booth?: number;
        template_comments?: Record<string, unknown>[];
        is_enabled_avatar_closet?: number;
        broadcast_host?: string;
        tags?: Record<string, unknown>[];
        live_user_key?: string;
        streaming_url_llstream_audio?: string;
        app_user_id_label?: string;
        bcsvr_key?: string;
        heartbeated_at?: number;
        is_private?: number;
        shares?: {
            twitter?: {
                maxlength?: number;
                card?: {
                    site?: string;
                    image_url?: string;
                    title?: string;
                    description?: string;
                };
                text?: string;
                placeholder?: string;
            };
            others?: {
                text?: string;
            };
            title?: string;
            description?: string;
        };
        collab_supported?: number;
        sticker_enabled?: number;
        collab_has_vacancy?: number;
        campaign_id?: string;
        stamp_num?: number;
        streaming_key?: string;
        linked_live?: Record<string, unknown> | null;
        collab_online_user_num?: number;
        remaining_paid_coins?: number;
        share_image_url?: string;
        live_game_playing?: Record<string, unknown> | null;
        broadcast_key?: string;
        gift_ranking_url?: string;
        collab_mos?: Record<string, unknown> | null;
        moderator_id?: string;
        remaining_coins?: number;
        live_request_comment_enabled?: number;
        archive_url_hls?: string;
        sticker_category_ids?: Record<string, unknown>[];
        ended_at?: number;
        is_live_moderator?: number;
        online_user_num?: number;
        announcement_url?: string;
        anniversary_bot_comment?: string;
        is_emomo_wipe_enabled?: number;
        share_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_nuu_welcome?: boolean;
        orientation?: number;
        is_app_user_id_hidden?: number;
        app_id?: string;
        app_is_category?: number;
        timeline?: {
            app?: {
                is_my_app?: number;
                icon_url?: string;
                store_url?: string;
                app_id?: string;
                is_app_user_id_hidden?: number;
                is_holding_campaign?: number;
                short_title?: string;
                is_category?: number;
                title?: string;
                id?: number;
                app_user_id_label?: string;
            };
            timestamp?: number;
            title?: string;
        }[];
        app_icon_urls?: string[];
        enable_clap?: number;
        remaining_free_coins?: number;
        is_paid_sticker_supported?: number;
        announcement_urls?: {
            player?: Record<string, unknown>[];
        };
        sticker_num?: number;
        app_short_title?: string;
        max_collab_user_num?: number;
        comment_num?: number;
        owner?: {
            share_url?: string;
            is_able_continuous_stream_holiday?: number;
            profile_image_url?: string;
            birthday_from?: number;
            is_birthday_editable?: number;
            is_visible_birthday?: boolean;
            badges?: {
                image_url?: string;
                small_image_url?: string;
            }[];
            is_new?: number;
            catalog_label_image_url?: string;
            is_cheerleader?: number;
            birthday?: string;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            twitter_screen_name?: string;
            birthday_to?: number;
            name?: string;
            is_birthday?: number;
            birthday_editable_date?: string;
            description?: string;
            properties?: Record<string, unknown>[];
            is_continuous_streamer?: number;
            profile_frame_image_url?: string;
            is_blocking?: number;
            is_following?: number;
            user_id?: string;
            live_request_num?: string;
            onlive?: Record<string, unknown> | null;
        };
        recommend_sticker_ids?: Record<string, unknown>[];
        broadcast_port?: number;
        is_omotenashi?: boolean;
        sticker_display_type?: number;
        archive_comment_enabled?: number;
        streaming_url_edge?: string;
        user_label_image_url?: string;
        app_num?: number;
        collab_enabled?: number;
        gift_appeal_popup_image?: Record<string, unknown> | null;
        image_url?: string;
        collab_invitation?: Record<string, unknown> | null;
        orientation_v2?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_comment {
    "application/x-www-form-urlencoded": {
        comment?: string;
        live_id?: string;
        type?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_comment$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveLive_comments {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveLive_comments$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        comments?: {
            yell_level?: number;
            badge_image_url?: string;
            profile_image_url?: string;
            user_name?: string;
            is_continuous_streamer?: number;
            profile_frame_image_url?: string;
            created_at?: string;
            comment?: string;
            yell_rank?: number;
            is_moderator?: number;
            is_cheerleader?: number;
            is_nuu?: boolean;
            id?: string;
            user_id?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_create$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        streaming_url_hls?: string;
        is_gift_supported?: number;
        streaming_url_llstream_video?: string;
        stun_servers?: {
            transport?: Record<string, unknown> | null;
            port?: string;
            host?: string;
        }[];
        streaming_upload_url3?: string;
        user_app_status?: Record<string, unknown>[];
        live_id?: string;
        is_mirrorable?: number;
        description?: string;
        total_viewer_num?: number;
        thumbnail_image_url?: string;
        is_archive?: number;
        title?: string;
        games?: Record<string, unknown>[];
        max_online_viewer_num?: number;
        created_at?: number;
        preview_blur_image_url?: string;
        blur_image_url?: string;
        started_at?: number;
        is_live?: number;
        thumbnail_blur_image_url?: string;
        image_url_without_letterbox?: string;
        adaptive_bitrate_available?: number;
        joined_live_thumbnail_image_url?: string;
        high_quality_available?: number;
        broadcast_host?: string;
        tags?: Record<string, unknown>[];
        live_user_key?: string;
        streaming_url_llstream_audio?: string;
        app_user_id_label?: string;
        bcsvr_key?: string;
        heartbeated_at?: number;
        is_private?: number;
        shares?: {
            twitter?: {
                maxlength?: number;
                card?: {
                    site?: string;
                    image_url?: string;
                    title?: string;
                    description?: string;
                };
                text?: string;
                placeholder?: string;
            };
            others?: {
                text?: string;
            };
            title?: string;
            description?: string;
        };
        collab_supported?: number;
        sticker_enabled?: number;
        collab_has_vacancy?: number;
        stamp_num?: number;
        streaming_key?: string;
        projection_use_display_size?: number;
        collab_online_user_num?: number;
        matching_collab_banner_image_url?: string;
        share_image_url?: string;
        broadcast_key?: string;
        gift_ranking_url?: string;
        need_confirm_streaming_shard_changed?: number;
        moderator_id?: string;
        archive_url_hls?: string;
        ended_at?: number;
        online_user_num?: number;
        share_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_nuu_welcome?: boolean;
        orientation?: number;
        is_app_user_id_hidden?: number;
        app_icon_urls?: Record<string, unknown>[];
        timeline?: Record<string, unknown>[];
        streaming_upload_url2?: string;
        sticker_num?: number;
        max_collab_user_num?: number;
        comment_num?: number;
        owner?: {
            share_url?: string;
            profile_image_url?: string;
            name?: string;
            description?: string;
            properties?: Record<string, unknown>[];
            badges?: Record<string, unknown>[];
            profile_frame_image_url?: string;
            is_continuous_streamer?: number;
            is_new?: number;
            is_cheerleader?: number;
            user_id?: string;
            live_request_num?: string;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            onlive?: Record<string, unknown> | null;
        };
        broadcast_port?: number;
        is_omotenashi?: boolean;
        sticker_display_type?: number;
        turn_servers?: {
            pass?: string;
            transport?: string;
            user?: string;
            port?: string;
            host?: string;
        }[];
        user_label_image_url?: string;
        streaming_url_edge?: string;
        collab_enabled?: number;
        image_url?: string;
        orientation_v2?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_edit {
    "application/x-www-form-urlencoded": {
        collab_enabled?: string;
        description?: string;
        is_catalog_emomo_enabled?: string;
        live_id?: string;
        max_collab_user_num?: string;
        orientation?: string;
        orientation_v2?: string;
        sets_as_default?: string;
        sticker_display_type?: string;
        title?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_edit$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        streaming_url_hls?: string;
        is_gift_supported?: number;
        streaming_url_llstream_video?: string;
        stun_servers?: {
            transport?: Record<string, unknown> | null;
            port?: string;
            host?: string;
        }[];
        streaming_upload_url3?: string;
        user_app_status?: Record<string, unknown>[];
        live_id?: string;
        is_mirrorable?: number;
        request_package_usage_stats?: Record<string, unknown> | null;
        description?: string;
        total_viewer_num?: number;
        thumbnail_image_url?: string;
        is_archive?: number;
        title?: string;
        games?: Record<string, unknown>[];
        max_online_viewer_num?: number;
        created_at?: number;
        preview_blur_image_url?: string;
        blur_image_url?: string;
        started_at?: number;
        is_live?: number;
        thumbnail_blur_image_url?: string;
        image_url_without_letterbox?: string;
        adaptive_bitrate_available?: number;
        joined_live_thumbnail_image_url?: string;
        high_quality_available?: number;
        broadcast_host?: string;
        tags?: Record<string, unknown>[];
        live_user_key?: string;
        streaming_url_llstream_audio?: string;
        bcsvr_key?: string;
        app_user_id_label?: string;
        heartbeated_at?: number;
        is_private?: number;
        shares?: {
            twitter?: {
                maxlength?: number;
                card?: {
                    site?: string;
                    image_url?: string;
                    title?: string;
                    description?: string;
                };
                text?: string;
                placeholder?: string;
            };
            others?: {
                text?: string;
            };
            title?: string;
            description?: string;
        };
        collab_supported?: number;
        sticker_enabled?: number;
        collab_has_vacancy?: number;
        stamp_num?: number;
        streaming_key?: string;
        projection_use_display_size?: number;
        collab_online_user_num?: number;
        matching_collab_banner_image_url?: string;
        share_image_url?: string;
        broadcast_key?: string;
        gift_ranking_url?: string;
        need_confirm_streaming_shard_changed?: number;
        moderator_id?: string;
        archive_url_hls?: string;
        ended_at?: number;
        online_user_num?: number;
        share_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_nuu_welcome?: boolean;
        orientation?: number;
        is_app_user_id_hidden?: number;
        app_icon_urls?: Record<string, unknown>[];
        timeline?: {
            app?: {
                is_my_app?: number;
                icon_url?: string;
                store_url?: string;
                app_id?: string;
                is_app_user_id_hidden?: number;
                is_holding_campaign?: number;
                short_title?: string;
                is_category?: number;
                title?: string;
                id?: number;
                app_user_id_label?: string;
            };
            timestamp?: number;
            title?: string;
        }[];
        streaming_upload_url2?: string;
        sticker_num?: number;
        max_collab_user_num?: number;
        comment_num?: number;
        app_user_detail?: {
            name?: string;
            url?: string;
            user_id?: string;
            is_published_user_id?: number;
            message?: string;
            is_published_url?: number;
        };
        owner?: {
            share_url?: string;
            profile_image_url?: string;
            name?: string;
            description?: string;
            properties?: Record<string, unknown>[];
            badges?: Record<string, unknown>[];
            profile_frame_image_url?: string;
            is_continuous_streamer?: number;
            is_new?: number;
            is_cheerleader?: number;
            user_id?: string;
            live_request_num?: string;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            onlive?: Record<string, unknown> | null;
        };
        is_omotenashi?: boolean;
        broadcast_port?: number;
        sticker_display_type?: number;
        turn_servers?: {
            pass?: string;
            transport?: string;
            user?: string;
            port?: string;
            host?: string;
        }[];
        streaming_url_edge?: string;
        user_label_image_url?: string;
        collab_enabled?: number;
        image_url?: string;
        orientation_v2?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveLive_game_catalog {
    live_game_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveLive_game_catalog$Status$200 {
    "application/json": {
        current_cursor?: string;
        list?: Record<string, unknown>[];
        next_cursor?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveLive_history {
    user_id?: number;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveLive_history$Status$200 {
    "application/json": {
        next_page?: Record<string, unknown> | null;
        lives_num?: number;
        previous_page?: Record<string, unknown> | null;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_page?: number;
        lives?: {
            avatar_body_image_url?: string;
            is_private?: number;
            collab_supported?: number;
            sticker_enabled?: number;
            is_gift_supported?: number;
            collab_has_vacancy?: number;
            archive_hidden?: number;
            stamp_num?: number;
            user_app_status?: Record<string, unknown>[];
            collab_user_profile_image_urls?: Record<string, unknown>[];
            archive_status?: number;
            live_id?: string;
            collab_online_user_num?: number;
            share_image_url?: string;
            is_archive_expired?: number;
            is_mirrorable?: number;
            gift_coins?: number;
            description?: string;
            moderator_id?: string;
            total_viewer_num?: number;
            ended_at?: number;
            thumbnail_image_url?: string;
            is_archive?: number;
            online_user_num?: number;
            gift_point?: number;
            title?: string;
            share_url?: string;
            is_nuu_welcome?: boolean;
            gifter_num?: number;
            is_app_user_id_hidden?: number;
            orientation?: number;
            app_icon_urls?: Record<string, unknown>[];
            max_online_viewer_num?: number;
            created_at?: number;
            is_live?: number;
            started_at?: number;
            preview_blur_image_url?: string;
            blur_image_url?: string;
            image_url_without_letterbox?: string;
            thumbnail_blur_image_url?: string;
            sticker_num?: number;
            thumbnail_frame?: Record<string, unknown>;
            max_collab_user_num?: number;
            comment_num?: number;
            joined_live_thumbnail_image_url?: string;
            owner?: {
                share_url?: string;
                profile_image_url?: string;
                name?: string;
                description?: string;
                properties?: Record<string, unknown>[];
                badges?: Record<string, unknown>[];
                profile_frame_image_url?: string;
                is_continuous_streamer?: number;
                is_new?: number;
                is_cheerleader?: number;
                user_id?: string;
                season_rating?: {
                    class_name?: string;
                    icon_url?: string;
                };
                onlive?: Record<string, unknown> | null;
            };
            is_omotenashi?: boolean;
            sticker_display_type?: number;
            tags?: Record<string, unknown>[];
            top_gifters?: Record<string, unknown>[];
            app_num?: number;
            user_label_image_url?: string;
            collab_enabled?: number;
            image_url?: string;
            app_user_id_label?: string;
            bcsvr_key?: string;
            orientation_v2?: number;
            heartbeated_at?: number;
            archive_download_status?: number;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_polling {
    "application/x-www-form-urlencoded": {
        error_count?: string;
        is_ui_hidden?: string;
        live_id?: string;
        live_user_key?: string;
        viewer_receive_push_notification?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_polling$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        streaming_url_hls?: string;
        is_gift_supported?: number;
        streaming_url_llstream_video?: string;
        user_app_status?: Record<string, unknown>[];
        live_id?: string;
        app?: {
            app_user_detail?: {
                name?: string;
                url?: string;
                user_id?: string;
                is_published_user_id?: number;
                message?: string;
                is_published_url?: number;
            };
            is_my_app?: number;
            icon_url?: string;
            store_url?: string;
            app_id?: string;
            is_app_user_id_hidden?: number;
            is_holding_campaign?: number;
            short_title?: string;
            is_category?: number;
            title?: string;
            id?: number;
            app_user_id_label?: string;
        };
        is_mirrorable?: number;
        app_title?: string;
        description?: string;
        total_viewer_num?: number;
        thumbnail_image_url?: string;
        is_archive?: number;
        is_singing_karaoke?: number;
        title?: string;
        tutorial_mission?: {
            enable_mission?: boolean;
            is_first_mission_cleared?: boolean;
            unreceived_mission_num?: number;
        };
        max_online_viewer_num?: number;
        is_emomo_visible?: boolean;
        created_at?: number;
        is_live?: number;
        started_at?: number;
        preview_blur_image_url?: string;
        blur_image_url?: string;
        thumbnail_blur_image_url?: string;
        image_url_without_letterbox?: string;
        is_connected_streaming_collab?: number;
        joined_live_thumbnail_image_url?: string;
        broadcast_host?: string;
        tags?: Record<string, unknown>[];
        live_user_key?: string;
        streaming_url_llstream_audio?: string;
        bcsvr_key?: string;
        app_user_id_label?: string;
        heartbeated_at?: number;
        is_private?: number;
        shares?: {
            twitter?: {
                maxlength?: number;
                card?: {
                    site?: string;
                    image_url?: string;
                    title?: string;
                    description?: string;
                };
                text?: string;
                placeholder?: string;
            };
            others?: {
                text?: string;
            };
            title?: string;
            description?: string;
        };
        collab_supported?: number;
        sticker_enabled?: number;
        collab_has_vacancy?: number;
        stamp_num?: number;
        streaming_key?: string;
        linked_live?: Record<string, unknown> | null;
        collab_online_user_num?: number;
        share_image_url?: string;
        broadcast_key?: string;
        gift_ranking_url?: string;
        moderator_id?: string;
        archive_url_hls?: string;
        sticker_category_ids?: Record<string, unknown>[];
        ended_at?: number;
        is_live_moderator?: number;
        online_user_num?: number;
        is_emomo_wipe_enabled?: number;
        share_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_nuu_welcome?: boolean;
        orientation?: number;
        is_app_user_id_hidden?: number;
        app_id?: string;
        app_is_category?: number;
        app_icon_urls?: string[];
        timeline?: {
            app?: {
                is_my_app?: number;
                icon_url?: string;
                store_url?: string;
                app_id?: string;
                is_app_user_id_hidden?: number;
                is_holding_campaign?: number;
                short_title?: string;
                is_category?: number;
                title?: string;
                id?: number;
                app_user_id_label?: string;
            };
            timestamp?: number;
            title?: string;
        }[];
        enable_clap?: number;
        sticker_num?: number;
        app_short_title?: string;
        max_collab_user_num?: number;
        comment_num?: number;
        owner?: {
            avatar_body_image_url?: string;
            ambassador_image_url?: string;
            current_continuous_record?: string;
            registered_at?: string;
            custom_thanks_message?: string;
            profile_image_url?: string;
            badges?: Record<string, unknown>[];
            continuous_type?: number;
            is_visible_birthday?: boolean;
            follower_num?: string;
            next_continuous_streamer_badge_url?: string;
            links?: Record<string, unknown>[];
            grade_id?: number;
            twitter_screen_name?: Record<string, unknown> | null;
            birthday_to?: number;
            name?: string;
            description?: string;
            birthday_editable_date?: string;
            is_birthday?: number;
            properties?: Record<string, unknown>[];
            total_viewer_num?: number;
            profile_frame_image_url?: string;
            live_announcement?: Record<string, unknown> | null;
            is_blocking?: number;
            user_id?: string;
            paypal_username?: string;
            next_continuous_streamer_text?: string;
            onlive?: Record<string, unknown> | null;
            share_url?: string;
            birthday_from?: number;
            ribbons?: {
                is_continuous_ribbon?: number;
                label_remaining_period?: {
                    remain_seconds?: number;
                    text?: string;
                    is_highlight?: number;
                };
                image_url?: string;
                ribbon_id?: number;
                is_label?: number;
            }[];
            is_birthday_editable?: number;
            avatar_background_image_url?: string;
            is_new?: number;
            following_num?: string;
            is_follower?: number;
            is_cheerleader?: number;
            has_started_first_live?: number;
            max_continuous_record?: string;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            birthday?: string;
            remaining_days_for_continuous_streamer?: number;
            continuous_achieved_text?: string;
            is_continuous_streamer?: number;
            is_following?: number;
            live_request_num?: string;
        };
        recommend_sticker_ids?: Record<string, unknown>[];
        is_omotenashi?: boolean;
        broadcast_port?: number;
        sticker_display_type?: number;
        user_label_image_url?: string;
        streaming_url_edge?: string;
        collab_enabled?: number;
        image_url?: string;
        orientation_v2?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveOnline_users {
    page?: number;
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveOnline_users$Status$200 {
    "application/json": {
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_page?: number;
        users?: {
            share_url?: string;
            profile_image_url?: string;
            badges?: Record<string, unknown>[];
            is_new?: number;
            yell_rank?: number;
            is_cheerleader?: number;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            yell_level?: number;
            name?: string;
            description?: string;
            properties?: Record<string, unknown>[];
            is_continuous_streamer?: number;
            profile_frame_image_url?: string;
            is_collaborating?: number;
            collab_type?: number;
            user_id?: string;
            onlive?: Record<string, unknown> | null;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLivePreview_end {
    "application/x-www-form-urlencoded": {
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLivePreview_end$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLivePreview_polling {
    "application/x-www-form-urlencoded": {
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLivePreview_polling$Status$200 {
    "application/json": {
        is_live?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLivePreview_start {
    "application/x-www-form-urlencoded": {
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLivePreview_start$Status$200 {
    "application/json": {
        is_live?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveSanitize_text {
    "application/x-www-form-urlencoded": {
        text?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveSanitize_text$Status$200 {
    "application/json": {
        sanitized_text?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveSearch {
    q?: string;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveSearch$Status$200 {
    "application/json": {
        current_page?: number;
        live_smalls?: Record<string, unknown>[];
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        total_entries?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveUpdate_archive_settings {
    "application/x-www-form-urlencoded": {
        archive_hidden?: string;
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveUpdate_archive_settings$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveView_history$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_cursor?: string;
        next_cursor?: string;
        lives?: {
            is_private?: number;
            avatar_body_image_url?: string;
            collab_supported?: number;
            sticker_enabled?: number;
            collab_has_vacancy?: number;
            is_gift_supported?: number;
            stamp_num?: number;
            user_app_status?: Record<string, unknown>[];
            collab_user_profile_image_urls?: Record<string, unknown>[];
            live_id?: string;
            collab_online_user_num?: number;
            share_image_url?: string;
            is_follow?: number;
            is_mirrorable?: number;
            app_title?: string;
            moderator_id?: string;
            description?: string;
            total_viewer_num?: number;
            viewing_time?: number;
            thumbnail_image_url?: string;
            ended_at?: number;
            is_archive?: number;
            online_user_num?: number;
            gift_point?: number;
            title?: string;
            share_url?: string;
            is_nuu_welcome?: boolean;
            app_id?: string;
            is_app_user_id_hidden?: number;
            orientation?: number;
            app_is_category?: number;
            app_icon_urls?: string[];
            max_online_viewer_num?: number;
            created_at?: number;
            is_live?: number;
            started_at?: number;
            preview_blur_image_url?: string;
            blur_image_url?: string;
            thumbnail_blur_image_url?: string;
            image_url_without_letterbox?: string;
            sticker_num?: number;
            thumbnail_frame?: Record<string, unknown>;
            comment_num?: number;
            max_collab_user_num?: number;
            app_short_title?: string;
            owner?: {
                share_url?: string;
                profile_image_url?: string;
                name?: string;
                description?: string;
                properties?: Record<string, unknown>[];
                badges?: Record<string, unknown>[];
                profile_frame_image_url?: string;
                is_continuous_streamer?: number;
                is_new?: number;
                catalog_label_image_url?: string;
                is_cheerleader?: number;
                user_id?: string;
                season_rating?: {
                    class_name?: string;
                    icon_url?: string;
                };
                onlive?: Record<string, unknown> | null;
            };
            joined_live_thumbnail_image_url?: string;
            is_omotenashi?: boolean;
            sticker_display_type?: number;
            tags?: Record<string, unknown>[];
            user_label_image_url?: string;
            collab_enabled?: number;
            image_url?: string;
            bcsvr_key?: string;
            app_user_id_label?: string;
            heartbeated_at?: number;
            orientation_v2?: number;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLive_gameEnd {
    "application/x-www-form-urlencoded": {
        play_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLive_gameEnd$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLive_gameList$Status$200 {
    "application/json": {
        current_cursor?: string;
        games?: {
            animated_banner_url?: string;
            app_id?: string;
            banner_url?: string;
            description?: string;
            friend_invitation?: Record<string, unknown> | null;
            icon_url?: string;
            id?: string;
            is_onlive_play_only?: boolean;
            logo_url?: string;
            mission?: {
                coin_boost?: {
                    description?: string;
                };
                condition?: string;
                player?: {
                    coin?: number;
                    status?: number;
                };
                viewer?: {
                    coin?: number;
                    status?: number;
                };
            };
            provider?: Record<string, unknown> | null;
            title?: string;
        }[];
        latest_created_at?: number;
        mission_banner_url?: string;
        mission_progress?: {
            given_coin?: number;
            max_coin?: number;
            status?: number;
        };
        next_cursor?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLive_gameNew_counts {
    live_games?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLive_gameNew_counts$Status$200 {
    "application/json": {
        counts?: {
            live_games?: string;
        };
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLive_gameStart {
    "application/x-www-form-urlencoded": {
        id?: string;
        is_viewer_self_start?: string;
        source?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLive_gameStart$Status$200 {
    "application/json": {
        adjust_tokens?: Record<string, unknown>[];
        firebase_tokens?: Record<string, unknown>[];
        is_landscape?: boolean;
        launch_url?: string;
        live_game_id?: string;
        play_id?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiMissionCurrent_login_bonus$Status$200 {
    "application/json": {
        body_image_url?: string;
        login_bonus_id?: string;
        rewards?: Record<string, unknown>[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        title_image_url?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiMissionDaily$Status$200 {
    "application/json": {
        is_viewing_ad_required?: boolean;
        category_second?: {
            category_id?: number;
            missions?: {
                reward_text?: string;
                has_reward_detail?: boolean;
                reward_avatar_part_type_icon_url?: string;
                status?: number;
                reward_image_url?: string;
                with_ad?: boolean;
                description?: string;
                progress_status?: {
                    current?: number;
                    max?: number;
                };
                reward_num?: number;
                hint?: Record<string, unknown> | null;
                id?: number;
                title?: string;
                reward_text_description?: string;
            }[];
            is_activation?: boolean;
            category_description_first?: string;
            category_description_second?: Record<string, unknown>[];
        };
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        header_image_url?: string;
        description?: string;
        footer_description?: string;
        mission_description?: string;
        category_special?: {
            download_url?: string;
            cautions?: string;
            category_id?: number;
            missions?: {
                reward_text?: string;
                status?: number;
                with_ad?: boolean;
                reward_num?: number;
                id?: number;
                icon_image_url?: string;
                reward_text_description?: string;
                download_url?: string;
                reward_avatar_part_type_icon_url?: string;
                has_reward_detail?: boolean;
                app_title?: string;
                reward_image_url?: string;
                description?: string;
                video_url?: string;
                progress_status?: {
                    current?: number;
                    max?: number;
                };
                title?: string;
            }[];
            mission?: {
                reward_text?: string;
                status?: number;
                reward_image_url?: string;
                with_ad?: boolean;
                description?: string;
                progress_status?: {
                    current?: number;
                    max?: number;
                };
                reward_num?: number;
                hint?: Record<string, unknown> | null;
                id?: number;
                title?: string;
            };
            icon_image_url?: string;
            video_url?: string;
        };
        unreceived_mission_num?: number;
        category_first?: {
            cautions?: string;
            category_id?: number;
            missions?: {
                reward_text?: string;
                has_reward_detail?: boolean;
                reward_avatar_part_type_icon_url?: string;
                status?: number;
                reward_image_url?: string;
                with_ad?: boolean;
                description?: string;
                progress_status?: {
                    current?: number;
                    max?: number;
                };
                reward_num?: number;
                hint?: Record<string, unknown> | null;
                id?: number;
                title?: string;
                reward_text_description?: string;
            }[];
            is_activation?: boolean;
            category_description_first?: string;
            vip?: {
                reward_description?: string;
                is_vip_only?: boolean;
                month?: number;
                vip_rank?: number;
                is_continuous?: boolean;
                message?: string;
                rewards?: {
                    text?: string;
                    vip_rank?: number;
                }[];
                promotion?: Record<string, unknown> | null;
                landing_page_url?: string;
            };
            category_description_second?: {
                is_bold?: number;
                text?: string;
                is_highlighted?: number;
            }[];
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiMissionStatus$Status$200 {
    "application/json": {
        total_mission_num?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        enable_daily_mission?: number;
        daily_unreceived_mission_num?: number;
        enable_mission?: boolean;
        complete_mission_num?: number;
        unreceived_mission_num?: number;
        vip_mission?: Record<string, unknown> | null;
        weekly_unreceived_mission_num?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiMissionTutorial_status$Status$200 {
    "application/json": {
        enable_mission?: boolean;
        is_first_mission_cleared?: boolean;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        unreceived_mission_num?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiMissionWeekly$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        description?: string;
        mission_description?: string;
        header_image_url?: string;
        category_special?: {
            category_id?: number;
            download_url?: string;
            video_url?: string;
            icon_image_url?: string;
            cautions?: string;
            missions?: {
                id?: number;
                reward_text?: string;
                reward_num?: number;
                reward_image_url?: string;
                reward_avatar_part_type_icon_url?: string;
                reward_text_description?: string;
                has_reward_detail?: boolean;
                title?: string;
                description?: string;
                app_title?: string;
                download_url?: string;
                video_url?: string;
                icon_image_url?: string;
                status?: number;
                progress_status?: {
                    max?: number;
                    current?: number;
                };
                with_ad?: boolean;
            }[];
            mission?: {
                id?: number;
                reward_text?: string;
                reward_num?: number;
                reward_image_url?: string;
                reward_avatar_part_type_icon_url?: string;
                reward_text_description?: string;
                has_reward_detail?: boolean;
                title?: string;
                description?: string;
                status?: number;
                progress_status?: {
                    max?: number;
                    current?: number;
                };
                with_ad?: boolean;
                hint?: Record<string, unknown> | null;
            };
        };
        category_first?: {
            category_id?: number;
            category_description_first?: string;
            category_description_second?: Record<string, unknown>[];
            cautions?: string;
            is_activation?: boolean;
            missions?: {
                id?: number;
                reward_text?: string;
                reward_num?: number;
                reward_image_url?: string;
                reward_avatar_part_type_icon_url?: string;
                reward_text_description?: string;
                has_reward_detail?: boolean;
                title?: string;
                description?: string;
                status?: number;
                progress_status?: {
                    max?: number;
                    current?: number;
                };
                with_ad?: boolean;
                hint?: Record<string, unknown> | null;
            }[];
        };
        category_second?: {
            category_id?: number;
            category_description_first?: string;
            category_description_second?: Record<string, unknown>[];
            cautions?: string;
            is_activation?: boolean;
            missions?: {
                id?: number;
                reward_text?: string;
                reward_num?: number;
                reward_image_url?: string;
                reward_avatar_part_type_icon_url?: string;
                reward_text_description?: string;
                has_reward_detail?: boolean;
                title?: string;
                description?: string;
                status?: number;
                progress_status?: {
                    max?: number;
                    current?: number;
                };
                with_ad?: boolean;
                hint?: Record<string, unknown> | null;
            }[];
        };
        unreceived_mission_num?: number;
        is_viewing_ad_required?: boolean;
        footer_description?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiNoticeCampaigns {
    category?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiNoticeCampaigns$Status$200 {
    "application/json": {
        campaign_notices?: {
            created_at?: number;
            entry_status?: number;
            event_period?: string;
            has_receivable_reward?: number;
            id?: number;
            image_url?: string;
            is_now?: number;
            is_upcoming?: number;
            period_type?: number;
            prize_delivery_date?: string;
            related_notices?: Record<string, unknown>[];
            text?: string;
            type?: string;
            url?: string;
        }[];
        current_cursor?: string;
        has_campaign_rewards?: number;
        latest_created_at?: number;
        next_cursor?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiNoticeCounts {
    recommend_campaigns?: number;
    chat?: number;
    app_campaigns?: number;
    present_boxes?: number;
    emomo_campaigns?: number;
    news?: number;
    followee_lives?: number;
    yours?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiNoticeCounts$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        counts?: {
            chats?: string;
            yours?: string;
            app_campaigns?: string;
            recommend_campaigns?: string;
            campaigns?: string;
            myapp_campaigns?: string;
            cheer_threads?: string;
            cheer_join?: string;
            myapp_closed_campaigns?: string;
            emomo_campaigns?: string;
            news?: string;
            present_boxes?: string;
            followee_lives?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiNoticeNews$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_cursor?: string;
        next_cursor?: string;
        news_notices?: {
            created_at?: number;
            text?: string;
            url?: string;
            image_url?: string;
            type?: string;
            title?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiNoticePopups {
    position?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiNoticePopups$Status$200 {
    "application/json": {
        popups?: {
            notice_url?: string;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiNoticePresent_boxes$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_cursor?: string;
        next_cursor?: string;
        present_boxes?: {
            link?: string;
            disabled?: number;
            icon_url?: string;
            user_present_id?: number;
            description?: string;
            attributed_texts?: {
                text?: string;
                is_highlight?: number;
            }[];
            received_at?: number;
            created_at?: number;
            button_text?: string;
            image_url?: string;
            type?: string;
            need_user_action?: number;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiNoticeYours_v2$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_cursor?: string;
        next_cursor?: string;
        your_notices?: {
            your_notice_id?: string;
            attributed_texts?: {
                is_bold?: number;
                text?: string;
            }[];
            created_at?: number;
            small_icon_image_urls?: Record<string, unknown>[];
            url?: string;
            image_url?: string;
            type?: string;
            icon_image_url?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiNotificationPush_settings_v3$Status$200 {
    "application/json": {
        is_enabled_campaigns?: number;
        is_enabled_chats?: number;
        is_enabled_lives?: number;
        is_enabled_news?: number;
        is_enabled_present_boxes?: number;
        is_enabled_yours?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiNotificationPush_settings_v3 {
    "application/x-www-form-urlencoded": {
        is_enabled_campaigns?: string;
        is_enabled_chats?: string;
        is_enabled_lives?: string;
        is_enabled_news?: string;
        is_enabled_present_boxes?: string;
        is_enabled_yours?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiNotificationPush_settings_v3$Status$200 {
    "application/json": {
        is_enabled_campaigns?: number;
        is_enabled_chats?: number;
        is_enabled_lives?: number;
        is_enabled_news?: number;
        is_enabled_present_boxes?: number;
        is_enabled_yours?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiRankingFocusable$Status$200 {
    "application/json": {
        rankings?: {
            event_id?: string;
            event_type?: number;
            image_url?: string;
            is_focus?: boolean;
            period?: string;
            title?: string;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiRankingUser_detail {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiRankingUser_detail$Status$200 {
    "application/json": {
        rankings?: {
            is_app_event?: boolean;
            event_id?: number;
            event_title?: string;
            event_icon_url?: string;
            total_point?: number;
            rank?: number;
            rank_text?: string;
            ranking_point?: number;
            banner_icon_image_url?: string;
            banner_icon_link_url?: string;
            reward_icon_url?: string;
            reward_achieved_point?: number;
            reward_need_point?: number;
            is_focus?: boolean;
            nano_time?: number;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiReward_adAvailable_reward_ad_ids {
    mode?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiReward_adAvailable_reward_ad_ids$Status$200 {
    "application/json": {
        thumbnail_image_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        reward_ad_ids?: number[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiReward_adCheck_available_device$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiReward_adComplete {
    "application/x-www-form-urlencoded": {
        reward_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiReward_adComplete$Status$200 {
    "application/json": {
        reward_id?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        title?: string;
        icon_image_url?: string;
        description?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiSeason_ratingStatus {
    user_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiSeason_ratingStatus$Status$200 {
    "application/json": {
        coin?: number;
        diamond?: number;
        last_season?: {
            class_end?: number;
            class_id?: number;
            class_start?: number;
            current?: number;
            month?: number;
            season_duration?: string;
        };
        season?: {
            class_end?: number;
            class_id?: number;
            class_start?: number;
            current?: number;
            month?: number;
            season_duration?: string;
        };
        show_popup?: boolean;
        star_summary?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiSeason_yellStatus {
    user_id?: number;
    streamer_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiSeason_yellStatus$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        yell_lp_url?: string;
        yell_status?: Record<string, unknown> | null;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiSeason_yellViewers {
    user_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiSeason_yellViewers$Status$200 {
    "application/json": {
        banner_url?: string;
        list?: {
            users?: {
                badge_image_url?: string;
                catalog_label_image_url?: string;
                name?: string;
                order?: number;
                profile_frame_image_url?: string;
                profile_image_url?: string;
                user_id?: string;
                yell_continuations?: {
                    count?: number;
                    yell_rank?: number;
                }[];
                yell_label_type?: number;
                yell_level?: number;
                yell_rank?: number;
                yell_rank_total_count?: number;
            }[];
            yell_bonus_description?: string;
            yell_rank?: number;
        }[];
        month_end_date?: number;
        month_start_date?: number;
        previous_month?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        yell_lp_url?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiTooltipStart_live_button$Status$200 {
    "application/json": {
        tooltip?: Record<string, unknown> | null;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserBad_report {
    "application/x-www-form-urlencoded": {
        category_id?: string;
        message?: string;
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserBad_report$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserBroadcast_settings$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        is_private_live_enable?: boolean;
        app_campaigns?: {
            url?: string;
            image_url?: string;
            app_id?: string;
        }[];
        selected_thumbnail_frame_id?: number;
        is_omotenashi_live_enable?: boolean;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        twitter_autopost?: string;
        carousel?: {
            type?: string;
            catalog_banner?: {
                text2?: string;
                period?: string;
                text?: string;
                url?: string;
                text1?: string;
                banner_image_url?: string;
                text3?: string;
            };
        }[];
        has_valid_nuu_welcome_live_tickets?: boolean;
        omotenashi_lp_url?: string;
        omotenashi_live_notice_text?: string;
        nuu_welcome_live_lp_url?: string;
        thumbnail_frames?: Record<string, unknown>[];
        is_nuu_welcome_live_enable?: boolean;
        twitter_autopost_live_announcement?: string;
        warning?: Record<string, unknown> | null;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserCheck_minor {
    "application/x-www-form-urlencoded": {
        birthday?: string;
        generation?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserCheck_minor$Status$200 {
    "application/json": {
        app_unavailable?: Record<string, unknown> | null;
        parent_agreement?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserCurrency$Status$200 {
    "application/json": {
        remaining_free_coins?: number;
        remaining_kandumes?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        remaining_expires_date?: number;
        remaining_paid_coins?: number;
        remaining_coins?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserDate_of_birth {
    "application/x-www-form-urlencoded": {
        birthday?: string;
        generation?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserDate_of_birth$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserDelete_live_announcement$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserFavorite_live_setting$Status$200 {
    "application/json": {
        settings?: {
            app_icon_url?: string;
            app_id?: string;
            app_is_category?: number;
            app_is_published_url?: number;
            app_is_published_user_id?: number;
            app_short_title?: string;
            app_title?: string;
            app_url?: string;
            app_user_id?: string;
            app_user_id_label?: string;
            id?: number;
            is_app_user_id_hidden?: number;
            live_thumbnail_image_url?: string;
            memo?: string;
            title?: string;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserLogout$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserMe$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        current_continuous_record?: number;
        custom_thanks_message?: string;
        profile_image_url?: string;
        continuous_type?: number;
        badges?: Record<string, unknown>[];
        should_device_check?: number;
        purchase_continuous_live_holiday_required_coin?: number;
        default_live?: {
            thumbnail?: {
                image_url?: string;
            };
            title?: string;
            collab?: {
                max_user_num?: string;
                enabled?: number;
            };
            description?: string;
            enabled?: number;
        };
        twitter_screen_name?: Record<string, unknown> | null;
        name?: string;
        description?: string;
        is_birthday?: number;
        total_viewer_num?: number;
        properties?: Record<string, unknown>[];
        purchase_continuous_live_holiday_enabled?: number;
        accepts_avatar?: number;
        profile_frame_image_url?: string;
        is_vip_public_setting_visible?: boolean;
        next_continuous_streamer_text?: string;
        user_id?: string;
        onlive?: Record<string, unknown> | null;
        should_register_unique_code?: number;
        latest_gacha_started_at?: number;
        latest_live_started_at?: string;
        ribbons?: {
            is_continuous_ribbon?: number;
            label_remaining_period?: {
                remain_seconds?: number;
                text?: string;
                is_highlight?: number;
            };
            image_url?: string;
            ribbon_id?: number;
            is_label?: number;
        }[];
        user_avatar_parts_num?: number;
        is_already_set_handover_code?: number;
        avatar_background_image_url?: string;
        is_new?: number;
        following_num?: string;
        is_apple_user?: number;
        is_cheerleader?: number;
        accepts_tour?: number;
        has_started_first_live?: number;
        vip?: Record<string, unknown> | null;
        birthday?: string;
        max_continuous_record?: string;
        should_show_demographic_form?: number;
        user_level?: Record<string, unknown>;
        profile_frames?: Record<string, unknown>[];
        generation?: string;
        live_request_num?: string;
        ambassador_image_url?: string;
        returning_user_type?: number;
        registered_at?: string;
        season_yell?: {
            is_display_target?: boolean;
            preview_viewers?: Record<string, unknown>[];
            total_viewer_count?: number;
        };
        is_visible_birthday?: boolean;
        follower_num?: string;
        next_continuous_streamer_badge_url?: string;
        anniversary?: Record<string, unknown>;
        capabilities?: {
            personalized_appeal?: Record<string, unknown> | null;
            delete_personalized_appeal?: boolean;
            standing_view_supported?: number;
            emokara_onboarding?: number;
            coin_challenge_enabled?: number;
            ab_ios_publish_button_enabled?: number;
            mail_support_enabled?: number;
            private_live_tutorial_url?: string;
            max_group_user_num?: number;
            onboarding_button_image_urls?: {
                on?: string;
                off?: string;
            };
            user_level_enabled?: number;
            onboarding_twitter_enabled?: boolean;
            photo_booth_enabled?: number;
            ab_emomo_tab_female_default_names?: string[];
            ios_audio_session_tracking_enabled?: number;
            ab_emomo_tab_male_default_names?: string[];
            is_avatar_applied?: number;
            follow_button_relocation_pattern?: number;
            android_play_integrity_enabled_for_debug?: boolean;
            gacha_gauge_enabled?: number;
            todays_list_enabled?: number;
            onboarding_live_matching_enabled?: boolean;
            android_play_integrity_enabled?: boolean;
            ios_collab_alpha?: number;
            google_account_nonce?: string;
            android_larger_virtualdisplay?: number;
            ab_emomo_tab?: number;
            face_tracking_enabled?: number;
            time_machine?: Record<string, unknown> | null;
            disabled_alpha?: number;
            ios_currency_enabled?: number;
            encourage_live_popup_image_url?: string;
            onboarding_royal_enabled?: boolean;
            home_tab_integration?: number;
            live_prepare_tutorial_enabled?: number;
            gacha_enabled?: number;
            collab_alpha?: number;
            lower_audio_record_buffer_enabled?: number;
            pip_enabled?: number;
            recommend_text_to_speech_app_id?: string;
            app_user_url_supported_app_ids?: string[];
            ab_audio_session_set_mix_with_others?: number;
            season_rating_info_url?: string;
            ios_audio_help_url?: string;
            offer_wall_url?: string;
            collabo_emomo_enabled?: number;
            save_avatar_photo_enabled?: number;
            android_currency_enabled?: number;
            game_blackjack?: string;
            app_add_request_form_url?: string;
            android_same_aspect_ratio_as_screen?: number;
            ab_registration_1?: number;
            request_review_v1?: number;
            wipe_emomo_enabled?: number;
            live_game_listing_icon_enabled?: number;
            offer_wall_only?: number;
            avatar_introduction_image_url?: string;
            handover_code_supported?: number;
            ab_onboarding_emomo?: number;
            ab_20180601_myapp?: number;
            ios_tag_beta?: number;
            is_summer_event_period?: number;
            emomo_audio_service_enabled?: number;
            android_avoid_green_edge?: number;
            ip_collab_enabled?: boolean;
            sticker_beta?: number;
            is_avatar_candidate?: number;
            home_reward_ad_button_enabled?: number;
            is_enabled_nwbandwidth_notice?: number;
            report_categories?: {
                title?: string;
                id?: number;
            }[];
            android_safetynet_enabled?: boolean;
            mario_kart_url?: string;
            app_user_detail_enabled?: number;
            apple_sign_nonce?: string;
            ab_20180601_live_tutorial?: number;
            is_llstream_v1_subscribe_logger?: number;
            media_codec_async_mode_enabled?: number;
            default_names?: Record<string, unknown>[];
            is_invite_collab_supported?: number;
            avatar_tutorial_pages?: string[];
            ios_audio_rendering_enabled?: number;
            login_feature_bubble_enabled?: boolean;
            demographic_enabled?: number;
            streaming_bgm_enabled?: number;
            game_app_icon_enabled?: number;
            notification_education_video_url?: string;
            gift_ranking_enabled?: number;
            launch_with_follow_tab?: number;
            is_visible_new_year_popup_on_stream_start?: number;
            avatar_asset_bundle_url?: string;
            speedtest_enabled?: number;
            is_joined_live_thumbnail_supported?: number;
            moderator?: number;
            onboarding_survey_enabled?: boolean;
            notice_counts_cache_expire?: number;
            ab_20180601_registration?: number;
            fps_adjustment_enabled?: number;
            mix_with_app_audio_enabled?: number;
            official_twitter?: string;
            live_preview_v2?: number;
            default_headphones_broadcasting_enabled?: number;
            avatar_compatible?: number;
            karaoke_enabled?: number;
            share?: {
                text?: string;
                popup_title?: string;
                popup_description?: string;
            };
            is_llstream_v1_subscribe?: number;
            live_preview_sound_enabled?: boolean;
            reduce_unity_asset_bundle?: number;
            is_notification_blur_supported?: number;
            tweet_hash_tags?: {
                line1?: string[];
                line2?: string[];
            };
            demographic_last_shown_time?: number;
            init_media_profile?: number;
            package_usage_stats_interval?: number;
            ios_ab_audiosession_at_started_enabled?: number;
            fallbacked_app_ids?: {
                "YoStarJP.MajSoul"?: string[];
                "com.xflag.fightleague.amazon"?: string[];
                "com.netease.ko"?: string[];
                "com.nhnpa.cps.amazon"?: string[];
                "jp.co.yoozoo.projectred"?: string[];
                "com.netease.hyxd"?: string[];
                "com.netease.ko.amazon"?: string[];
                "jp.co.cave.mahouotome"?: string[];
                "com.square_enix.android_amazon.hoshidora"?: string[];
                "jp.co.mixi.monsterstrike.amazon"?: string[];
                "com.netease.idv.googleplay"?: string[];
                "app0014-2"?: string[];
                app0014?: string[];
            };
            rotation_player_enabled?: boolean;
            ios_broadcast_help_url?: string;
            user_me_cache_expire?: number;
            is_llstream_v1_broadcast?: number;
            strings?: {
                text_emomo_confirm_save?: string;
                text_emomo_confirm_apply_message?: string;
                text_gauge_gacha_text1?: string;
                text_invitation_code_posted?: string;
                text_q_late?: string;
                text_chat_tutorial_makeroom_dm?: string;
                text_gacha_exe_alert_v2?: string;
                text_private_tutorial_ttl?: string;
                text_emomo_confirm_apply_title?: string;
            };
            voice_changer_supported?: number;
        };
        my_app_num?: number;
        is_vip_public?: boolean;
        links?: {
            url?: string;
        }[];
        grade_id?: number;
        birthday_to?: number;
        parent_agreement?: Record<string, unknown> | null;
        birthday_editable_date?: string;
        live_announcement?: Record<string, unknown> | null;
        live_thumbnail_image_url?: string;
        max_continuous_live_holiday?: number;
        paypal_username?: string;
        nuu?: Record<string, unknown> | null;
        used_continuous_stream_holidays_num?: number;
        share_url?: string;
        recording_enabled?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        live_description?: string;
        birthday_from?: number;
        purchase_continuous_live_holiday_enabled_at?: number;
        vip_point?: Record<string, unknown> | null;
        is_birthday_editable?: number;
        onboarding_live_game?: {
            app_id?: string;
            id?: string;
        };
        kakao_name?: string;
        continuous_stream_holidays_num?: number;
        announcement_urls?: Record<string, unknown>;
        season_rating?: {
            class_name?: string;
            icon_url?: string;
        };
        remaining_days_for_continuous_streamer?: number;
        continuous_achieved_text?: string;
        chat_enabled?: number;
        app_unavailable?: Record<string, unknown> | null;
        has_avatar?: number;
        is_google_user?: boolean;
        is_continuous_streamer?: number;
        is_continuous_live_user_after_next_live?: number;
        chat_only_followings?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserPost_live_announcement {
    "application/x-www-form-urlencoded": {
        body?: string;
        is_notified_to_follower?: string;
        start_at?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserPost_live_announcement$Status$200 {
    "application/json": {
        live_announcement?: {
            body?: string;
            start_at?: number;
        };
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserPost_live_request {
    "application/x-www-form-urlencoded": {
        count?: string;
        user_id?: string;
        where?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserPost_live_request$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserPost_review_confirmation {
    "application/x-www-form-urlencoded": {
        status?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserPost_review_confirmation$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiUserProfile {
    user_id?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserProfile$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        ambassador_image_url?: string;
        current_continuous_record?: number;
        registered_at?: string;
        custom_thanks_message?: string;
        profile_image_url?: string;
        season_yell?: {
            is_display_target?: boolean;
            preview_viewers?: Record<string, unknown>[];
            total_viewer_count?: number;
        };
        badges?: {
            image_url?: string;
            small_image_url?: string;
        }[];
        continuous_type?: number;
        is_visible_birthday?: boolean;
        follower_num?: string;
        next_continuous_streamer_badge_url?: string;
        anniversary?: Record<string, unknown>;
        my_app_num?: number;
        links?: {
            url?: string;
        }[];
        mutual_followees?: {
            text?: string;
            image_urls?: Record<string, unknown>[];
        };
        grade_id?: number;
        twitter_screen_name?: string;
        birthday_to?: number;
        name?: string;
        description?: string;
        birthday_editable_date?: string;
        is_birthday?: number;
        properties?: Record<string, unknown>[];
        total_viewer_num?: number;
        profile_frame_image_url?: string;
        live_announcement?: Record<string, unknown> | null;
        is_blocking?: number;
        is_blocked?: number;
        user_id?: string;
        paypal_username?: string;
        next_continuous_streamer_text?: string;
        onlive?: Record<string, unknown> | null;
        nuu?: Record<string, unknown> | null;
        share_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        ribbons?: {
            is_continuous_ribbon?: number;
            label_remaining_period?: {
                remain_seconds?: number;
                text?: string;
                is_highlight?: number;
            };
            image_url?: string;
            ribbon_id?: number;
            is_label?: number;
        }[];
        birthday_from?: number;
        tutorial_mission?: Record<string, unknown> | null;
        is_birthday_editable?: number;
        avatar_background_image_url?: string;
        is_new?: number;
        following_num?: string;
        is_cheerleader?: number;
        kakao_name?: string;
        is_follower?: number;
        has_started_first_live?: number;
        max_continuous_record?: string;
        season_rating?: {
            class_name?: string;
            icon_url?: string;
        };
        birthday?: string;
        user_level?: Record<string, unknown>;
        remaining_days_for_continuous_streamer?: number;
        continuous_achieved_text?: string;
        chat_enabled?: number;
        is_continuous_streamer?: number;
        is_following?: number;
        live_request_num?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserProfile_edit {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserProfile_edit$Status$200 {
    "application/json": {
        ambassador_image_url?: string;
        avatar_body_image_url?: string;
        current_continuous_record?: number;
        custom_thanks_message?: string;
        registered_at?: string;
        profile_image_url?: string;
        is_visible_birthday?: boolean;
        continuous_type?: number;
        badges?: Record<string, unknown>[];
        follower_num?: string;
        next_continuous_streamer_badge_url?: string;
        anniversary?: Record<string, unknown>;
        my_app_num?: number;
        is_vip_public?: boolean;
        links?: {
            url?: string;
        }[];
        grade_id?: number;
        twitter_screen_name?: Record<string, unknown> | null;
        birthday_to?: number;
        name?: string;
        is_birthday?: number;
        birthday_editable_date?: string;
        description?: string;
        total_viewer_num?: number;
        properties?: Record<string, unknown>[];
        accepts_avatar?: number;
        profile_frame_image_url?: string;
        live_announcement?: Record<string, unknown> | null;
        next_continuous_streamer_text?: string;
        paypal_username?: string;
        user_id?: string;
        onlive?: Record<string, unknown> | null;
        share_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        ribbons?: {
            is_continuous_ribbon?: number;
            label_remaining_period?: {
                remain_seconds?: number;
                text?: string;
                is_highlight?: number;
            };
            image_url?: string;
            ribbon_id?: number;
            is_label?: number;
        }[];
        birthday_from?: number;
        is_birthday_editable?: number;
        avatar_background_image_url?: string;
        onboarding_live_game?: {
            app_id?: string;
            id?: string;
        };
        is_new?: number;
        following_num?: string;
        is_apple_user?: number;
        is_cheerleader?: number;
        accepts_tour?: number;
        has_started_first_live?: number;
        birthday?: string;
        season_rating?: {
            class_name?: string;
            icon_url?: string;
        };
        max_continuous_record?: string;
        remaining_days_for_continuous_streamer?: number;
        continuous_achieved_text?: string;
        has_avatar?: number;
        is_continuous_streamer?: number;
        profile_frames?: Record<string, unknown>[];
        generation?: string;
        live_request_num?: string;
        chat_only_followings?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiUserSearch {
    q?: string;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserSearch$Status$200 {
    "application/json": {
        current_page?: number;
        next_page?: number;
        previous_page?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        users?: {
            badges?: {
                image_url?: string;
                small_image_url?: string;
            }[];
            description?: string;
            is_blocking?: number;
            is_cheerleader?: number;
            is_continuous_streamer?: number;
            is_follower?: number;
            is_following?: number;
            is_moderator?: number;
            is_new?: number;
            name?: string;
            onlive?: Record<string, unknown> | null;
            profile_image_url?: string;
            properties?: Record<string, unknown>[];
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            share_url?: string;
            user_id?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserSetting_root$Status$200 {
    "application/json": {
        live_report_url?: string;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        watchword_setting_url?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserTos$Status$200 {
    "application/json": {
        popup?: Record<string, unknown> | null;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserUpdate_favorite_live_setting {
    "application/x-www-form-urlencoded": {
        app_id?: string;
        id?: string;
        live_thumbnail_image_url?: string;
        memo?: string;
        title?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserUpdate_favorite_live_setting$Status$200 {
    "application/json": {
        setting?: {
            app_icon_url?: string;
            app_id?: string;
            app_is_category?: number;
            app_is_published_url?: number;
            app_is_published_user_id?: number;
            app_short_title?: string;
            app_title?: string;
            app_url?: string;
            app_user_id?: string;
            app_user_id_label?: string;
            id?: number;
            is_app_user_id_hidden?: number;
            live_thumbnail_image_url?: string;
            memo?: string;
            title?: string;
        };
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserUpdate_recording_settings {
    "application/x-www-form-urlencoded": {
        enabled?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserUpdate_recording_settings$Status$200 {
    "application/json": {
        enabled?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiUserUse_favorite_live_setting {
    "application/x-www-form-urlencoded": {
        id?: string;
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiUserUse_favorite_live_setting$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiUserWatchword$Status$200 {
    "application/json": {
        campaign?: Record<string, unknown> | null;
        descriptions?: string[];
        header_image_url?: string;
        is_star?: boolean;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        title?: string;
        watchword?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getLpWatchwordRegister$Status$200  {
  [key: string]: unknown;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getNoticePopup {
    obfuscated_user_id?: string;
    id?: number;
    new_popup?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getNoticePopup$Status$200  {
  [key: string]: unknown;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiChatAgree {
    "application/x-www-form-urlencoded": {
        is_agreed?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiChatAgree$Status$200 {
    "application/json": {
        chat_status?: {
            is_cheer_club_enabled?: boolean;
            is_enabled?: boolean;
            require_birthday?: boolean;
            require_chat_confirmation_agreement?: boolean;
            require_cheer_chat_confirmation_agreement?: boolean;
            require_generation?: boolean;
        };
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiChatPost_thanks {
    "application/x-www-form-urlencoded": {
        live_id?: string;
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiChatPost_thanks$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        remaining_present_ticket?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiChatPost_thanks_to_live_watched_users {
    "application/x-www-form-urlencoded": {
        custom_thanks_message?: string;
        live_id?: string;
        target_type?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiChatPost_thanks_to_live_watched_users$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        remaining_present_ticket?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiCollabClose {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiCollabClose$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCollabConnected_streaming_collab_lives {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCollabConnected_streaming_collab_lives$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        lives?: Record<string, unknown>[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiCollabInvitable_users {
    live_id?: string;
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiCollabInvitable_users$Status$200 {
    "application/json": {
        paging?: {
            current_page?: number;
        };
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        users?: Record<string, unknown>[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiCollabInvite {
    "application/x-www-form-urlencoded": {
        collab_type?: string;
        invite_user_id?: string;
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiCollabInvite$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiCollabSend_to_peer {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiCollabSend_to_peer$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiCollabStart {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiCollabStart$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGiftUpdate_rich_unique_emomo_gift {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGiftUpdate_rich_unique_emomo_gift$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiGift_gachaUser_stocks {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiGift_gachaUser_stocks$Status$200 {
    "application/json": {
        current_meter?: number;
        enabled?: number;
        ends_at?: number;
        gift_gacha_stocks?: Record<string, unknown>[];
        max_meter?: number;
        starts_at?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        time?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiGraphFollow_live_watched_users {
    "application/x-www-form-urlencoded": {
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiGraphFollow_live_watched_users$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiKaraoke {
    page?: number;
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiKaraoke$Status$200 {
    "application/json": {
        current_page?: number;
        karaokes?: {
            composer?: string;
            genre_ids?: number[];
            id?: string;
            lyricist?: string;
            playing_time?: number;
            singer_id?: string;
            singer_name?: string;
            title?: string;
        }[];
        next_page?: number;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiKaraoke {
    page?: number;
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiKaraoke$Status$200  {
  [key: string]: unknown;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiKaraokeBy_genre {
    page?: number;
    genre_id?: number;
    where?: string;
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiKaraokeBy_genre$Status$200 {
    "application/json": {
        next_page?: Record<string, unknown> | null;
        previous_page?: Record<string, unknown> | null;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        current_page?: number;
        karaokes?: {
            playing_time?: string;
            genre_ids?: string[];
            lyricist?: string;
            singer_name?: string;
            id?: string;
            title?: string;
            composer?: string;
            singer_id?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiKaraokeGenres$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        genres?: {
            banner_big_image_url?: string;
            name?: string;
            id?: string;
            banner_small_image_url?: string;
            text_image_url?: string;
        }[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiKaraokeRecommend_singers {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiKaraokeRecommend_singers$Status$200 {
    "application/json": {
        recommend_singers?: Record<string, unknown>[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiKaraokeSearch {
    q?: string;
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiKaraokeSearch$Status$200 {
    "application/json": {
        karaokes?: {
            composer?: string;
            genre_ids?: number[];
            id?: string;
            lyricist?: string;
            playing_time?: number;
            singer_id?: string;
            singer_name?: string;
            title?: string;
        }[];
        singers?: {
            id?: string;
            kana?: string;
            name?: string;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiKaraokeSingers {
    page?: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiKaraokeSingers$Status$200 {
    "application/json": {
        current_page?: number;
        next_page?: number;
        singers?: {
            id?: string;
            kana?: string;
            name?: string;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveBroadcast_result {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveBroadcast_result$Status$200 {
    "application/json": {
        has_receivable_mission?: boolean;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_gift_supported?: number;
        stamp_num?: number;
        max_online_viewer_num?: string;
        post_thanks_to_live_watched_users_enabled?: number;
        user?: {
            ambassador_image_url?: string;
            avatar_body_image_url?: string;
            current_continuous_record?: number;
            custom_thanks_message?: string;
            registered_at?: string;
            profile_image_url?: string;
            is_visible_birthday?: boolean;
            continuous_type?: number;
            badges?: Record<string, unknown>[];
            follower_num?: string;
            next_continuous_streamer_badge_url?: string;
            links?: {
                url?: string;
            }[];
            grade_id?: number;
            twitter_screen_name?: Record<string, unknown> | null;
            birthday_to?: number;
            name?: string;
            is_birthday?: number;
            birthday_editable_date?: string;
            description?: string;
            total_viewer_num?: number;
            properties?: Record<string, unknown>[];
            profile_frame_image_url?: string;
            live_announcement?: Record<string, unknown> | null;
            next_continuous_streamer_text?: string;
            paypal_username?: string;
            user_id?: string;
            onlive?: Record<string, unknown> | null;
            share_url?: string;
            birthday_from?: number;
            ribbons?: {
                is_continuous_ribbon?: number;
                label_remaining_period?: {
                    remain_seconds?: number;
                    text?: string;
                    is_highlight?: number;
                };
                image_url?: string;
                ribbon_id?: number;
                is_label?: number;
            }[];
            is_birthday_editable?: number;
            avatar_background_image_url?: string;
            is_new?: number;
            following_num?: string;
            is_cheerleader?: number;
            has_started_first_live?: number;
            birthday?: string;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            max_continuous_record?: string;
            remaining_days_for_continuous_streamer?: number;
            continuous_achieved_text?: string;
            is_continuous_streamer?: number;
            live_request_num?: string;
        };
        should_show_live_announcement?: number;
        received_diamonds?: {
            calculated_at?: Record<string, unknown> | null;
            is_eligible?: number;
        };
        send_gacha_ticket_message?: string;
        sticker_num?: number;
        current_live_continuous_num?: string;
        should_request_review?: number;
        event_type?: number;
        remaining_present_ticket?: number;
        gift_coins?: number;
        total_viewer_num?: number;
        chat_status?: {
            is_enabled?: boolean;
            require_generation?: boolean;
            require_birthday?: boolean;
            is_cheer_club_enabled?: boolean;
            require_cheer_chat_confirmation_agreement?: boolean;
            require_chat_confirmation_agreement?: boolean;
        };
        is_updated_max_live_continuous_num?: number;
        title?: string;
        share_text?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveDelete_live_history {
    "application/x-www-form-urlencoded": {
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveDelete_live_history$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveKick_out {
    "application/x-www-form-urlencoded": {
        live_id?: string;
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveKick_out$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_app_identifier_changed {
    "application/x-www-form-urlencoded": {
        app_identifier?: string;
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_app_identifier_changed$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_capture_image {
    "application/x-www-form-urlencoded": {
        [key: string]: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_capture_image$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        image_url?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_end {
    "application/x-www-form-urlencoded": {
        is_available_app_audio?: string;
        live_id?: string;
        mix_with_app_audio?: string;
        process_id?: string;
        process_memory?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_end$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        live?: {
            max_online_viewer_num?: string;
            current_live_continuous_record?: number;
            sticker_num?: number;
            stamp_num?: number;
            total_viewer_num?: number;
        };
        announcement_url?: string;
        received_diamonds?: Record<string, unknown>;
        user?: {
            past_live_best_record?: {
                max_online_viewer_num?: string;
                stamp_num?: string;
                total_viewer_num?: string;
            };
            total_viewer_num_history?: number[];
        };
        gift_coins?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_heartbeat {
    "application/x-www-form-urlencoded": {
        buffering_size?: string;
        comment_push_enabled?: string;
        encoder_bitrate?: string;
        is_app_foreground?: string;
        is_available_app_audio?: string;
        is_cast_mirroring?: string;
        is_emomo_visible?: string;
        is_muted?: string;
        is_share_screen?: string;
        live_id?: string;
        mix_with_app_audio?: string;
        network_bitrate?: string;
        process_id?: string;
        process_memory?: string;
        speech_synthesizer_enabled?: string;
        thermal_state?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_heartbeat$Status$200 {
    "application/json": {
        is_live?: number;
        online_user_num?: number;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        has_matched_live?: number;
        gift_event_rank?: number;
        is_matching_collab_enabled?: number;
        total_viewer_num?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveLive_start {
    "application/x-www-form-urlencoded": {
        comment_push_enabled?: string;
        enabled_customize_hash_tags?: string;
        input_source?: string;
        is_available_app_audio?: string;
        is_muted?: string;
        is_omotenashi?: string;
        live_id?: string;
        mix_with_app_audio?: string;
        output_source?: string;
        process_boottime?: string;
        process_id?: string;
        process_memory?: string;
        quality_level?: string;
        speech_synthesizer_enabled?: string;
        thermal_state?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveLive_start$Status$200 {
    "application/json": {
        avatar_body_image_url?: string;
        streaming_url_hls?: string;
        is_streaming_collab_enabled?: number;
        is_gift_supported?: number;
        streaming_url_llstream_video?: string;
        user_app_status?: Record<string, unknown>[];
        stun_servers?: {
            transport?: Record<string, unknown> | null;
            port?: string;
            host?: string;
        }[];
        streaming_upload_url3?: string;
        live_id?: string;
        is_mirrorable?: number;
        description?: string;
        total_viewer_num?: number;
        thumbnail_image_url?: string;
        custom_video_bitrates?: {
            middle?: number;
            high?: number;
        };
        is_archive?: number;
        title?: string;
        max_online_viewer_num?: number;
        created_at?: number;
        preview_blur_image_url?: string;
        blur_image_url?: string;
        started_at?: number;
        is_live?: number;
        thumbnail_blur_image_url?: string;
        image_url_without_letterbox?: string;
        adaptive_bitrate_available?: number;
        joined_live_thumbnail_image_url?: string;
        high_quality_available?: number;
        live_style_id?: number;
        bitrate_control?: {
            increase_value?: number;
            decrease_rate?: number;
        };
        broadcast_host?: string;
        tags?: Record<string, unknown>[];
        live_user_key?: string;
        streaming_url_llstream_audio?: string;
        app_user_id_label?: string;
        bcsvr_key?: string;
        heartbeated_at?: number;
        is_private?: number;
        shares?: {
            twitter?: {
                maxlength?: number;
                card?: {
                    site?: string;
                    image_url?: string;
                    title?: string;
                    description?: string;
                };
                text?: string;
                placeholder?: string;
            };
            others?: {
                text?: string;
            };
            title?: string;
            description?: string;
        };
        collab_supported?: number;
        sticker_enabled?: number;
        collab_has_vacancy?: number;
        stamp_num?: number;
        streaming_key?: string;
        projection_use_display_size?: number;
        collab_online_user_num?: number;
        matching_collab_banner_image_url?: string;
        share_image_url?: string;
        user_matching_collab_enabled?: boolean;
        broadcast_key?: string;
        matching_collab_enabled_text?: string;
        gift_ranking_url?: string;
        need_confirm_streaming_shard_changed?: number;
        moderator_id?: string;
        archive_url_hls?: string;
        ended_at?: number;
        online_user_num?: number;
        share_url?: string;
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
        is_nuu_welcome?: boolean;
        orientation?: number;
        is_app_user_id_hidden?: number;
        app_icon_urls?: Record<string, unknown>[];
        timeline?: {
            app?: Record<string, unknown> | null;
            timestamp?: number;
            title?: string;
        }[];
        sticker_num?: number;
        streaming_upload_url2?: string;
        comment_num?: number;
        max_collab_user_num?: number;
        owner?: {
            share_url?: string;
            profile_image_url?: string;
            name?: string;
            description?: string;
            properties?: Record<string, unknown>[];
            badges?: Record<string, unknown>[];
            profile_frame_image_url?: string;
            is_continuous_streamer?: number;
            is_new?: number;
            is_cheerleader?: number;
            user_id?: string;
            live_request_num?: string;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            onlive?: Record<string, unknown> | null;
        };
        broadcast_port?: number;
        is_omotenashi?: boolean;
        sticker_display_type?: number;
        turn_servers?: {
            pass?: string;
            transport?: string;
            user?: string;
            port?: string;
            host?: string;
        }[];
        user_label_image_url?: string;
        streaming_url_edge?: string;
        collab_enabled?: number;
        image_url?: string;
        is_matching_collab_enabled?: number;
        should_retry_collab_live_id?: string;
        orientation_v2?: number;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveUpdate_emomo_visible {
    "application/x-www-form-urlencoded": {
        is_visible?: string;
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveUpdate_emomo_visible$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLiveUpdate_wipe_enabled {
    "application/x-www-form-urlencoded": {
        is_emomo_wipe_enabled?: string;
        live_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLiveUpdate_wipe_enabled$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiLiveViewers_result {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiLiveViewers_result$Status$200 {
    "application/json": {
        is_new_unique_streamer?: boolean;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        viewers?: Record<string, unknown>[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiLive_gamePing {
    "application/x-www-form-urlencoded": {
        live_id?: string;
        play_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiLive_gamePing$Status$200 {
    "application/json": {
        is_playing?: boolean;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiMissionReceive_login_bonus_reward {
    "application/x-www-form-urlencoded": {
        login_bonus_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiMissionReceive_login_bonus_reward$Status$200 {
    "application/json": {
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiModeratorAdd {
    "application/x-www-form-urlencoded": {
        live_id?: string;
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiModeratorAdd$Status$200 {
    "application/json": {
        moderator?: {
            share_url?: string;
            profile_image_url?: string;
            name?: string;
            description?: string;
            properties?: Record<string, unknown>[];
            badges?: Record<string, unknown>[];
            profile_frame_image_url?: string;
            is_continuous_streamer?: number;
            is_new?: number;
            is_cheerleader?: number;
            user_id?: string;
            season_rating?: {
                class_name?: string;
                icon_url?: string;
            };
            onlive?: Record<string, unknown> | null;
        };
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$postApiModeratorDelete {
    "application/x-www-form-urlencoded": {
        live_id?: string;
        user_id?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$postApiModeratorDelete$Status$200 {
    "application/json": {
        status?: {
            msg?: string;
            ok?: number;
            error?: string;
            captcha_url?: string;
            error_code?: number;
            message?: string;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiReward_adOfferwalls$Status$200 {
    "application/json": {
        offerwalls?: {
            label?: string;
            short_label?: string;
            url?: string;
        }[];
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getApiSeason_ratingLive_result {
    live_id?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiSeason_ratingLive_result$Status$200 {
    "application/json": {
        broadcast?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
        class_list?: {
            class_end?: number;
            class_id?: number;
            class_start?: number;
            end?: number;
            start?: number;
        }[];
        comment?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
        days_left?: number;
        first_look?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
        follow?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
        gift?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
        hours_left?: number;
        is_contract_live_result_enabled?: boolean;
        is_star?: boolean;
        is_star_started?: boolean;
        live_duration?: number;
        live_id?: string;
        others?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        view?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
        yell?: {
            count?: number;
            score_per_count?: number;
            acquired_score?: number;
            overflow?: boolean;
            is_new?: boolean;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getApiShooterMatching$Status$200 {
    "application/json": {
        is_matching_enabled?: boolean;
        status?: {
            ok?: number;
            error?: string;
            error_code?: number;
        };
        streamer_icon_urls?: Record<string, unknown>[];
        streamer_num_text?: string;
        viewers?: Record<string, unknown>[];
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getPageLp {
    path?: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getPageLp$Status$200  {
  [key: string]: unknown;
}
export type RequestContentType$postApiAnalyticsLog = keyof RequestBody$postApiAnalyticsLog;
export type ResponseContentType$postApiAnalyticsLog = keyof Response$postApiAnalyticsLog$Status$200;
export interface Params$postApiAnalyticsLog {
    requestBody: RequestBody$postApiAnalyticsLog["application/json"];
}
export type RequestContentType$postApiAppAdd_my_app = keyof RequestBody$postApiAppAdd_my_app;
export type ResponseContentType$postApiAppAdd_my_app = keyof Response$postApiAppAdd_my_app$Status$200;
export interface Params$postApiAppAdd_my_app {
    requestBody: RequestBody$postApiAppAdd_my_app["application/json"];
}
export type ResponseContentType$getApiAppApp_user_detail = keyof Response$getApiAppApp_user_detail$Status$200;
export interface Params$getApiAppApp_user_detail {
    parameter: Parameter$getApiAppApp_user_detail;
}
export type ResponseContentType$getApiAppAppeal_banners = keyof Response$getApiAppAppeal_banners$Status$200;
export interface Params$getApiAppAppeal_banners {
    parameter: Parameter$getApiAppAppeal_banners;
}
export type RequestContentType$postApiAppDelete_app_user_detail = keyof RequestBody$postApiAppDelete_app_user_detail;
export type ResponseContentType$postApiAppDelete_app_user_detail = keyof Response$postApiAppDelete_app_user_detail$Status$200;
export interface Params$postApiAppDelete_app_user_detail {
    requestBody: RequestBody$postApiAppDelete_app_user_detail["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiAppDelete_my_app = keyof RequestBody$postApiAppDelete_my_app;
export type ResponseContentType$postApiAppDelete_my_app = keyof Response$postApiAppDelete_my_app$Status$200;
export interface Params$postApiAppDelete_my_app {
    requestBody: RequestBody$postApiAppDelete_my_app["application/json"];
}
export type ResponseContentType$getApiAppMy_app = keyof Response$getApiAppMy_app$Status$200;
export interface Params$getApiAppMy_app {
    parameter: Parameter$getApiAppMy_app;
}
export type ResponseContentType$getApiAppOnlive_apps = keyof Response$getApiAppOnlive_apps$Status$200;
export type RequestContentType$postApiAppPost_app_user_detail = keyof RequestBody$postApiAppPost_app_user_detail;
export type ResponseContentType$postApiAppPost_app_user_detail = keyof Response$postApiAppPost_app_user_detail$Status$200;
export interface Params$postApiAppPost_app_user_detail {
    requestBody: RequestBody$postApiAppPost_app_user_detail["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiAppRecommend_apps = keyof Response$getApiAppRecommend_apps$Status$200;
export type ResponseContentType$getApiAppSearch = keyof Response$getApiAppSearch$Status$200;
export interface Params$getApiAppSearch {
    parameter: Parameter$getApiAppSearch;
}
export type ResponseContentType$getApiAppUser_apps = keyof Response$getApiAppUser_apps$Status$200;
export interface Params$getApiAppUser_apps {
    parameter: Parameter$getApiAppUser_apps;
}
export type ResponseContentType$getApiCampaignCompleted_mission = keyof Response$getApiCampaignCompleted_mission$Status$200;
export interface Params$getApiCampaignCompleted_mission {
    parameter: Parameter$getApiCampaignCompleted_mission;
}
export type ResponseContentType$getApiCampaignDetail = keyof Response$getApiCampaignDetail$Status$200;
export interface Params$getApiCampaignDetail {
    parameter: Parameter$getApiCampaignDetail;
}
export type ResponseContentType$getApiCatalogBanners = keyof Response$getApiCatalogBanners$Status$200;
export interface Params$getApiCatalogBanners {
    parameter: Parameter$getApiCatalogBanners;
}
export type ResponseContentType$getApiCatalogFollow = keyof Response$getApiCatalogFollow$Status$200;
export type ResponseContentType$getApiCatalogLives = keyof Response$getApiCatalogLives$Status$200;
export interface Params$getApiCatalogLives {
    parameter: Parameter$getApiCatalogLives;
}
export type ResponseContentType$getApiCatalogMyapp_recommend_lives = keyof Response$getApiCatalogMyapp_recommend_lives$Status$200;
export type ResponseContentType$getApiCatalogTabs = keyof Response$getApiCatalogTabs$Status$200;
export type RequestContentType$postApiChatJoin = keyof RequestBody$postApiChatJoin;
export type ResponseContentType$postApiChatJoin = keyof Response$postApiChatJoin$Status$200;
export interface Params$postApiChatJoin {
    requestBody: RequestBody$postApiChatJoin["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiChatPost_text = keyof RequestBody$postApiChatPost_text;
export type ResponseContentType$postApiChatPost_text = keyof Response$postApiChatPost_text$Status$200;
export interface Params$postApiChatPost_text {
    requestBody: RequestBody$postApiChatPost_text["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiChatRead = keyof RequestBody$postApiChatRead;
export type ResponseContentType$postApiChatRead = keyof Response$postApiChatRead$Status$200;
export interface Params$postApiChatRead {
    requestBody: RequestBody$postApiChatRead["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiChatThread = keyof Response$getApiChatThread$Status$200;
export interface Params$getApiChatThread {
    parameter: Parameter$getApiChatThread;
}
export type RequestContentType$postApiChatThread_visibility = keyof RequestBody$postApiChatThread_visibility;
export type ResponseContentType$postApiChatThread_visibility = keyof Response$postApiChatThread_visibility$Status$200;
export interface Params$postApiChatThread_visibility {
    requestBody: RequestBody$postApiChatThread_visibility["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiChatThreads = keyof Response$getApiChatThreads$Status$200;
export interface Params$getApiChatThreads {
    parameter: Parameter$getApiChatThreads;
}
export type ResponseContentType$getApiClosetAvatar = keyof Response$getApiClosetAvatar$Status$200;
export interface Params$getApiClosetAvatar {
    parameter: Parameter$getApiClosetAvatar;
}
export type ResponseContentType$getApiClosetAvatar_parts = keyof Response$getApiClosetAvatar_parts$Status$200;
export type ResponseContentType$getApiClosetClosets = keyof Response$getApiClosetClosets$Status$200;
export type RequestContentType$postApiClosetUpdate_closet_avatar = keyof RequestBody$postApiClosetUpdate_closet_avatar;
export type ResponseContentType$postApiClosetUpdate_closet_avatar = keyof Response$postApiClosetUpdate_closet_avatar$Status$200;
export interface Params$postApiClosetUpdate_closet_avatar {
    requestBody: RequestBody$postApiClosetUpdate_closet_avatar["application/json"];
}
export type RequestContentType$postApiClosetUpdate_closet_images = keyof RequestBody$postApiClosetUpdate_closet_images;
export type ResponseContentType$postApiClosetUpdate_closet_images = keyof Response$postApiClosetUpdate_closet_images$Status$200;
export interface Params$postApiClosetUpdate_closet_images {
    requestBody: RequestBody$postApiClosetUpdate_closet_images["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiCoin_boxStatus = keyof Response$getApiCoin_boxStatus$Status$200;
export interface Params$getApiCoin_boxStatus {
    parameter: Parameter$getApiCoin_boxStatus;
}
export type ResponseContentType$getApiCollabCollaborating_users = keyof Response$getApiCollabCollaborating_users$Status$200;
export interface Params$getApiCollabCollaborating_users {
    parameter: Parameter$getApiCollabCollaborating_users;
}
export type ResponseContentType$getApiContractSummary = keyof Response$getApiContractSummary$Status$200;
export type ResponseContentType$getApiEventNotice = keyof Response$getApiEventNotice$Status$200;
export interface Params$getApiEventNotice {
    parameter: Parameter$getApiEventNotice;
}
export type RequestContentType$postApiFeatureRegister_device_token = keyof RequestBody$postApiFeatureRegister_device_token;
export type ResponseContentType$postApiFeatureRegister_device_token = keyof Response$postApiFeatureRegister_device_token$Status$200;
export interface Params$postApiFeatureRegister_device_token {
    requestBody: RequestBody$postApiFeatureRegister_device_token["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiGiftEmomo_run_gifts = keyof Response$getApiGiftEmomo_run_gifts$Status$200;
export type ResponseContentType$getApiGiftPanels = keyof Response$getApiGiftPanels$Status$200;
export interface Params$getApiGiftPanels {
    parameter: Parameter$getApiGiftPanels;
}
export type ResponseContentType$getApiGiftRanking = keyof Response$getApiGiftRanking$Status$200;
export interface Params$getApiGiftRanking {
    parameter: Parameter$getApiGiftRanking;
}
export type RequestContentType$postApiGiftSend = keyof RequestBody$postApiGiftSend;
export type ResponseContentType$postApiGiftSend = keyof Response$postApiGiftSend$Status$200;
export interface Params$postApiGiftSend {
    requestBody: RequestBody$postApiGiftSend["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiGiftUnique_emomo_gift_config = keyof Response$getApiGiftUnique_emomo_gift_config$Status$200;
export type ResponseContentType$getApiGiftUnique_emomo_gift_slots = keyof Response$getApiGiftUnique_emomo_gift_slots$Status$200;
export type RequestContentType$postApiGiftUpdate_simple_unique_emomo_gift = keyof RequestBody$postApiGiftUpdate_simple_unique_emomo_gift;
export type ResponseContentType$postApiGiftUpdate_simple_unique_emomo_gift = keyof Response$postApiGiftUpdate_simple_unique_emomo_gift$Status$200;
export interface Params$postApiGiftUpdate_simple_unique_emomo_gift {
    requestBody: RequestBody$postApiGiftUpdate_simple_unique_emomo_gift["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiGift_appeal_popupRead = keyof RequestBody$postApiGift_appeal_popupRead;
export type ResponseContentType$postApiGift_appeal_popupRead = keyof Response$postApiGift_appeal_popupRead$Status$200;
export interface Params$postApiGift_appeal_popupRead {
    requestBody: RequestBody$postApiGift_appeal_popupRead["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiGoogleConnect = keyof RequestBody$postApiGoogleConnect;
export type ResponseContentType$postApiGoogleConnect = keyof Response$postApiGoogleConnect$Status$200;
export interface Params$postApiGoogleConnect {
    requestBody: RequestBody$postApiGoogleConnect["application/x-www-form-urlencoded"];
}
export type ResponseContentType$postApiGoogleDisconnect = keyof Response$postApiGoogleDisconnect$Status$200;
export type RequestContentType$postApiGraphBlock = keyof RequestBody$postApiGraphBlock;
export type ResponseContentType$postApiGraphBlock = keyof Response$postApiGraphBlock$Status$200;
export interface Params$postApiGraphBlock {
    requestBody: RequestBody$postApiGraphBlock["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiGraphBlocked_users = keyof Response$getApiGraphBlocked_users$Status$200;
export interface Params$getApiGraphBlocked_users {
    parameter: Parameter$getApiGraphBlocked_users;
}
export type RequestContentType$postApiGraphFollow = keyof RequestBody$postApiGraphFollow;
export type ResponseContentType$postApiGraphFollow = keyof Response$postApiGraphFollow$Status$200;
export interface Params$postApiGraphFollow {
    requestBody: RequestBody$postApiGraphFollow["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiGraphFollowers = keyof Response$getApiGraphFollowers$Status$200;
export interface Params$getApiGraphFollowers {
    parameter: Parameter$getApiGraphFollowers;
}
export type ResponseContentType$getApiGraphFollowings = keyof Response$getApiGraphFollowings$Status$200;
export interface Params$getApiGraphFollowings {
    parameter: Parameter$getApiGraphFollowings;
}
export type ResponseContentType$getApiGraphRecommend_users = keyof Response$getApiGraphRecommend_users$Status$200;
export interface Params$getApiGraphRecommend_users {
    parameter: Parameter$getApiGraphRecommend_users;
}
export type ResponseContentType$getApiGraphSearch = keyof Response$getApiGraphSearch$Status$200;
export interface Params$getApiGraphSearch {
    parameter: Parameter$getApiGraphSearch;
}
export type RequestContentType$postApiGraphUnblock = keyof RequestBody$postApiGraphUnblock;
export type ResponseContentType$postApiGraphUnblock = keyof Response$postApiGraphUnblock$Status$200;
export interface Params$postApiGraphUnblock {
    requestBody: RequestBody$postApiGraphUnblock["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiGraphUnfollow = keyof RequestBody$postApiGraphUnfollow;
export type ResponseContentType$postApiGraphUnfollow = keyof Response$postApiGraphUnfollow$Status$200;
export interface Params$postApiGraphUnfollow {
    requestBody: RequestBody$postApiGraphUnfollow["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiGroupEdit = keyof RequestBody$postApiGroupEdit;
export type ResponseContentType$postApiGroupEdit = keyof Response$postApiGroupEdit$Status$200;
export interface Params$postApiGroupEdit {
    requestBody: RequestBody$postApiGroupEdit["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiGroupInvite_users = keyof RequestBody$postApiGroupInvite_users;
export type ResponseContentType$postApiGroupInvite_users = keyof Response$postApiGroupInvite_users$Status$200;
export interface Params$postApiGroupInvite_users {
    requestBody: RequestBody$postApiGroupInvite_users["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiGroupLeave = keyof RequestBody$postApiGroupLeave;
export type ResponseContentType$postApiGroupLeave = keyof Response$postApiGroupLeave$Status$200;
export interface Params$postApiGroupLeave {
    requestBody: RequestBody$postApiGroupLeave["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiGroupUsers = keyof Response$getApiGroupUsers$Status$200;
export interface Params$getApiGroupUsers {
    parameter: Parameter$getApiGroupUsers;
}
export type ResponseContentType$getApiLiveAppeal_links = keyof Response$getApiLiveAppeal_links$Status$200;
export interface Params$getApiLiveAppeal_links {
    parameter: Parameter$getApiLiveAppeal_links;
}
export type ResponseContentType$getApiLiveCampaign = keyof Response$getApiLiveCampaign$Status$200;
export interface Params$getApiLiveCampaign {
    parameter: Parameter$getApiLiveCampaign;
}
export type ResponseContentType$getApiLiveGet_streaming_url = keyof Response$getApiLiveGet_streaming_url$Status$200;
export interface Params$getApiLiveGet_streaming_url {
    parameter: Parameter$getApiLiveGet_streaming_url;
}
export type RequestContentType$postApiLiveLeave = keyof RequestBody$postApiLiveLeave;
export type ResponseContentType$postApiLiveLeave = keyof Response$postApiLiveLeave$Status$200;
export interface Params$postApiLiveLeave {
    requestBody: RequestBody$postApiLiveLeave["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLiveLive = keyof Response$getApiLiveLive$Status$200;
export interface Params$getApiLiveLive {
    parameter: Parameter$getApiLiveLive;
}
export type RequestContentType$postApiLiveLive_comment = keyof RequestBody$postApiLiveLive_comment;
export type ResponseContentType$postApiLiveLive_comment = keyof Response$postApiLiveLive_comment$Status$200;
export interface Params$postApiLiveLive_comment {
    requestBody: RequestBody$postApiLiveLive_comment["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLiveLive_comments = keyof Response$getApiLiveLive_comments$Status$200;
export interface Params$getApiLiveLive_comments {
    parameter: Parameter$getApiLiveLive_comments;
}
export type ResponseContentType$postApiLiveLive_create = keyof Response$postApiLiveLive_create$Status$200;
export type RequestContentType$postApiLiveLive_edit = keyof RequestBody$postApiLiveLive_edit;
export type ResponseContentType$postApiLiveLive_edit = keyof Response$postApiLiveLive_edit$Status$200;
export interface Params$postApiLiveLive_edit {
    requestBody: RequestBody$postApiLiveLive_edit["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLiveLive_game_catalog = keyof Response$getApiLiveLive_game_catalog$Status$200;
export interface Params$getApiLiveLive_game_catalog {
    parameter: Parameter$getApiLiveLive_game_catalog;
}
export type ResponseContentType$getApiLiveLive_history = keyof Response$getApiLiveLive_history$Status$200;
export interface Params$getApiLiveLive_history {
    parameter: Parameter$getApiLiveLive_history;
}
export type RequestContentType$postApiLiveLive_polling = keyof RequestBody$postApiLiveLive_polling;
export type ResponseContentType$postApiLiveLive_polling = keyof Response$postApiLiveLive_polling$Status$200;
export interface Params$postApiLiveLive_polling {
    requestBody: RequestBody$postApiLiveLive_polling["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLiveOnline_users = keyof Response$getApiLiveOnline_users$Status$200;
export interface Params$getApiLiveOnline_users {
    parameter: Parameter$getApiLiveOnline_users;
}
export type RequestContentType$postApiLivePreview_end = keyof RequestBody$postApiLivePreview_end;
export type ResponseContentType$postApiLivePreview_end = keyof Response$postApiLivePreview_end$Status$200;
export interface Params$postApiLivePreview_end {
    requestBody: RequestBody$postApiLivePreview_end["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLivePreview_polling = keyof RequestBody$postApiLivePreview_polling;
export type ResponseContentType$postApiLivePreview_polling = keyof Response$postApiLivePreview_polling$Status$200;
export interface Params$postApiLivePreview_polling {
    requestBody: RequestBody$postApiLivePreview_polling["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLivePreview_start = keyof RequestBody$postApiLivePreview_start;
export type ResponseContentType$postApiLivePreview_start = keyof Response$postApiLivePreview_start$Status$200;
export interface Params$postApiLivePreview_start {
    requestBody: RequestBody$postApiLivePreview_start["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveSanitize_text = keyof RequestBody$postApiLiveSanitize_text;
export type ResponseContentType$postApiLiveSanitize_text = keyof Response$postApiLiveSanitize_text$Status$200;
export interface Params$postApiLiveSanitize_text {
    requestBody: RequestBody$postApiLiveSanitize_text["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLiveSearch = keyof Response$getApiLiveSearch$Status$200;
export interface Params$getApiLiveSearch {
    parameter: Parameter$getApiLiveSearch;
}
export type RequestContentType$postApiLiveUpdate_archive_settings = keyof RequestBody$postApiLiveUpdate_archive_settings;
export type ResponseContentType$postApiLiveUpdate_archive_settings = keyof Response$postApiLiveUpdate_archive_settings$Status$200;
export interface Params$postApiLiveUpdate_archive_settings {
    requestBody: RequestBody$postApiLiveUpdate_archive_settings["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLiveView_history = keyof Response$getApiLiveView_history$Status$200;
export type RequestContentType$postApiLive_gameEnd = keyof RequestBody$postApiLive_gameEnd;
export type ResponseContentType$postApiLive_gameEnd = keyof Response$postApiLive_gameEnd$Status$200;
export interface Params$postApiLive_gameEnd {
    requestBody: RequestBody$postApiLive_gameEnd["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLive_gameList = keyof Response$getApiLive_gameList$Status$200;
export type ResponseContentType$getApiLive_gameNew_counts = keyof Response$getApiLive_gameNew_counts$Status$200;
export interface Params$getApiLive_gameNew_counts {
    parameter: Parameter$getApiLive_gameNew_counts;
}
export type RequestContentType$postApiLive_gameStart = keyof RequestBody$postApiLive_gameStart;
export type ResponseContentType$postApiLive_gameStart = keyof Response$postApiLive_gameStart$Status$200;
export interface Params$postApiLive_gameStart {
    requestBody: RequestBody$postApiLive_gameStart["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiMissionCurrent_login_bonus = keyof Response$getApiMissionCurrent_login_bonus$Status$200;
export type ResponseContentType$getApiMissionDaily = keyof Response$getApiMissionDaily$Status$200;
export type ResponseContentType$getApiMissionStatus = keyof Response$getApiMissionStatus$Status$200;
export type ResponseContentType$getApiMissionTutorial_status = keyof Response$getApiMissionTutorial_status$Status$200;
export type ResponseContentType$getApiMissionWeekly = keyof Response$getApiMissionWeekly$Status$200;
export type ResponseContentType$getApiNoticeCampaigns = keyof Response$getApiNoticeCampaigns$Status$200;
export interface Params$getApiNoticeCampaigns {
    parameter: Parameter$getApiNoticeCampaigns;
}
export type ResponseContentType$getApiNoticeCounts = keyof Response$getApiNoticeCounts$Status$200;
export interface Params$getApiNoticeCounts {
    parameter: Parameter$getApiNoticeCounts;
}
export type ResponseContentType$getApiNoticeNews = keyof Response$getApiNoticeNews$Status$200;
export type ResponseContentType$getApiNoticePopups = keyof Response$getApiNoticePopups$Status$200;
export interface Params$getApiNoticePopups {
    parameter: Parameter$getApiNoticePopups;
}
export type ResponseContentType$getApiNoticePresent_boxes = keyof Response$getApiNoticePresent_boxes$Status$200;
export type ResponseContentType$getApiNoticeYours_v2 = keyof Response$getApiNoticeYours_v2$Status$200;
export type ResponseContentType$getApiNotificationPush_settings_v3 = keyof Response$getApiNotificationPush_settings_v3$Status$200;
export type RequestContentType$postApiNotificationPush_settings_v3 = keyof RequestBody$postApiNotificationPush_settings_v3;
export type ResponseContentType$postApiNotificationPush_settings_v3 = keyof Response$postApiNotificationPush_settings_v3$Status$200;
export interface Params$postApiNotificationPush_settings_v3 {
    requestBody: RequestBody$postApiNotificationPush_settings_v3["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiRankingFocusable = keyof Response$getApiRankingFocusable$Status$200;
export type ResponseContentType$getApiRankingUser_detail = keyof Response$getApiRankingUser_detail$Status$200;
export interface Params$getApiRankingUser_detail {
    parameter: Parameter$getApiRankingUser_detail;
}
export type ResponseContentType$getApiReward_adAvailable_reward_ad_ids = keyof Response$getApiReward_adAvailable_reward_ad_ids$Status$200;
export interface Params$getApiReward_adAvailable_reward_ad_ids {
    parameter: Parameter$getApiReward_adAvailable_reward_ad_ids;
}
export type ResponseContentType$getApiReward_adCheck_available_device = keyof Response$getApiReward_adCheck_available_device$Status$200;
export type RequestContentType$postApiReward_adComplete = keyof RequestBody$postApiReward_adComplete;
export type ResponseContentType$postApiReward_adComplete = keyof Response$postApiReward_adComplete$Status$200;
export interface Params$postApiReward_adComplete {
    requestBody: RequestBody$postApiReward_adComplete["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiSeason_ratingStatus = keyof Response$getApiSeason_ratingStatus$Status$200;
export interface Params$getApiSeason_ratingStatus {
    parameter: Parameter$getApiSeason_ratingStatus;
}
export type ResponseContentType$getApiSeason_yellStatus = keyof Response$getApiSeason_yellStatus$Status$200;
export interface Params$getApiSeason_yellStatus {
    parameter: Parameter$getApiSeason_yellStatus;
}
export type ResponseContentType$getApiSeason_yellViewers = keyof Response$getApiSeason_yellViewers$Status$200;
export interface Params$getApiSeason_yellViewers {
    parameter: Parameter$getApiSeason_yellViewers;
}
export type ResponseContentType$getApiTooltipStart_live_button = keyof Response$getApiTooltipStart_live_button$Status$200;
export type RequestContentType$postApiUserBad_report = keyof RequestBody$postApiUserBad_report;
export type ResponseContentType$postApiUserBad_report = keyof Response$postApiUserBad_report$Status$200;
export interface Params$postApiUserBad_report {
    requestBody: RequestBody$postApiUserBad_report["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiUserBroadcast_settings = keyof Response$getApiUserBroadcast_settings$Status$200;
export type RequestContentType$postApiUserCheck_minor = keyof RequestBody$postApiUserCheck_minor;
export type ResponseContentType$postApiUserCheck_minor = keyof Response$postApiUserCheck_minor$Status$200;
export interface Params$postApiUserCheck_minor {
    requestBody: RequestBody$postApiUserCheck_minor["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiUserCurrency = keyof Response$getApiUserCurrency$Status$200;
export type RequestContentType$postApiUserDate_of_birth = keyof RequestBody$postApiUserDate_of_birth;
export type ResponseContentType$postApiUserDate_of_birth = keyof Response$postApiUserDate_of_birth$Status$200;
export interface Params$postApiUserDate_of_birth {
    requestBody: RequestBody$postApiUserDate_of_birth["application/x-www-form-urlencoded"];
}
export type ResponseContentType$postApiUserDelete_live_announcement = keyof Response$postApiUserDelete_live_announcement$Status$200;
export type ResponseContentType$getApiUserFavorite_live_setting = keyof Response$getApiUserFavorite_live_setting$Status$200;
export type ResponseContentType$postApiUserLogout = keyof Response$postApiUserLogout$Status$200;
export type ResponseContentType$getApiUserMe = keyof Response$getApiUserMe$Status$200;
export type RequestContentType$postApiUserPost_live_announcement = keyof RequestBody$postApiUserPost_live_announcement;
export type ResponseContentType$postApiUserPost_live_announcement = keyof Response$postApiUserPost_live_announcement$Status$200;
export interface Params$postApiUserPost_live_announcement {
    requestBody: RequestBody$postApiUserPost_live_announcement["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiUserPost_live_request = keyof RequestBody$postApiUserPost_live_request;
export type ResponseContentType$postApiUserPost_live_request = keyof Response$postApiUserPost_live_request$Status$200;
export interface Params$postApiUserPost_live_request {
    requestBody: RequestBody$postApiUserPost_live_request["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiUserPost_review_confirmation = keyof RequestBody$postApiUserPost_review_confirmation;
export type ResponseContentType$postApiUserPost_review_confirmation = keyof Response$postApiUserPost_review_confirmation$Status$200;
export interface Params$postApiUserPost_review_confirmation {
    requestBody: RequestBody$postApiUserPost_review_confirmation["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiUserProfile = keyof Response$getApiUserProfile$Status$200;
export interface Params$getApiUserProfile {
    parameter: Parameter$getApiUserProfile;
}
export type RequestContentType$postApiUserProfile_edit = keyof RequestBody$postApiUserProfile_edit;
export type ResponseContentType$postApiUserProfile_edit = keyof Response$postApiUserProfile_edit$Status$200;
export interface Params$postApiUserProfile_edit {
    requestBody: RequestBody$postApiUserProfile_edit["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiUserSearch = keyof Response$getApiUserSearch$Status$200;
export interface Params$getApiUserSearch {
    parameter: Parameter$getApiUserSearch;
}
export type ResponseContentType$getApiUserSetting_root = keyof Response$getApiUserSetting_root$Status$200;
export type ResponseContentType$getApiUserTos = keyof Response$getApiUserTos$Status$200;
export type RequestContentType$postApiUserUpdate_favorite_live_setting = keyof RequestBody$postApiUserUpdate_favorite_live_setting;
export type ResponseContentType$postApiUserUpdate_favorite_live_setting = keyof Response$postApiUserUpdate_favorite_live_setting$Status$200;
export interface Params$postApiUserUpdate_favorite_live_setting {
    requestBody: RequestBody$postApiUserUpdate_favorite_live_setting["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiUserUpdate_recording_settings = keyof RequestBody$postApiUserUpdate_recording_settings;
export type ResponseContentType$postApiUserUpdate_recording_settings = keyof Response$postApiUserUpdate_recording_settings$Status$200;
export interface Params$postApiUserUpdate_recording_settings {
    requestBody: RequestBody$postApiUserUpdate_recording_settings["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiUserUse_favorite_live_setting = keyof RequestBody$postApiUserUse_favorite_live_setting;
export type ResponseContentType$postApiUserUse_favorite_live_setting = keyof Response$postApiUserUse_favorite_live_setting$Status$200;
export interface Params$postApiUserUse_favorite_live_setting {
    requestBody: RequestBody$postApiUserUse_favorite_live_setting["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiUserWatchword = keyof Response$getApiUserWatchword$Status$200;
export interface Params$getNoticePopup {
    parameter: Parameter$getNoticePopup;
}
export type RequestContentType$postApiChatAgree = keyof RequestBody$postApiChatAgree;
export type ResponseContentType$postApiChatAgree = keyof Response$postApiChatAgree$Status$200;
export interface Params$postApiChatAgree {
    requestBody: RequestBody$postApiChatAgree["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiChatPost_thanks = keyof RequestBody$postApiChatPost_thanks;
export type ResponseContentType$postApiChatPost_thanks = keyof Response$postApiChatPost_thanks$Status$200;
export interface Params$postApiChatPost_thanks {
    requestBody: RequestBody$postApiChatPost_thanks["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiChatPost_thanks_to_live_watched_users = keyof RequestBody$postApiChatPost_thanks_to_live_watched_users;
export type ResponseContentType$postApiChatPost_thanks_to_live_watched_users = keyof Response$postApiChatPost_thanks_to_live_watched_users$Status$200;
export interface Params$postApiChatPost_thanks_to_live_watched_users {
    requestBody: RequestBody$postApiChatPost_thanks_to_live_watched_users["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiCollabClose = keyof RequestBody$postApiCollabClose;
export type ResponseContentType$postApiCollabClose = keyof Response$postApiCollabClose$Status$200;
export interface Params$postApiCollabClose {
    requestBody: RequestBody$postApiCollabClose["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiCollabConnected_streaming_collab_lives = keyof Response$getApiCollabConnected_streaming_collab_lives$Status$200;
export interface Params$getApiCollabConnected_streaming_collab_lives {
    parameter: Parameter$getApiCollabConnected_streaming_collab_lives;
}
export type ResponseContentType$getApiCollabInvitable_users = keyof Response$getApiCollabInvitable_users$Status$200;
export interface Params$getApiCollabInvitable_users {
    parameter: Parameter$getApiCollabInvitable_users;
}
export type RequestContentType$postApiCollabInvite = keyof RequestBody$postApiCollabInvite;
export type ResponseContentType$postApiCollabInvite = keyof Response$postApiCollabInvite$Status$200;
export interface Params$postApiCollabInvite {
    requestBody: RequestBody$postApiCollabInvite["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiCollabSend_to_peer = keyof RequestBody$postApiCollabSend_to_peer;
export type ResponseContentType$postApiCollabSend_to_peer = keyof Response$postApiCollabSend_to_peer$Status$200;
export interface Params$postApiCollabSend_to_peer {
    requestBody: RequestBody$postApiCollabSend_to_peer["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiCollabStart = keyof RequestBody$postApiCollabStart;
export type ResponseContentType$postApiCollabStart = keyof Response$postApiCollabStart$Status$200;
export interface Params$postApiCollabStart {
    requestBody: RequestBody$postApiCollabStart["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiGiftUpdate_rich_unique_emomo_gift = keyof RequestBody$postApiGiftUpdate_rich_unique_emomo_gift;
export type ResponseContentType$postApiGiftUpdate_rich_unique_emomo_gift = keyof Response$postApiGiftUpdate_rich_unique_emomo_gift$Status$200;
export interface Params$postApiGiftUpdate_rich_unique_emomo_gift {
    requestBody: RequestBody$postApiGiftUpdate_rich_unique_emomo_gift["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiGift_gachaUser_stocks = keyof Response$getApiGift_gachaUser_stocks$Status$200;
export interface Params$getApiGift_gachaUser_stocks {
    parameter: Parameter$getApiGift_gachaUser_stocks;
}
export type RequestContentType$postApiGraphFollow_live_watched_users = keyof RequestBody$postApiGraphFollow_live_watched_users;
export type ResponseContentType$postApiGraphFollow_live_watched_users = keyof Response$postApiGraphFollow_live_watched_users$Status$200;
export interface Params$postApiGraphFollow_live_watched_users {
    requestBody: RequestBody$postApiGraphFollow_live_watched_users["application/x-www-form-urlencoded"];
}
export interface Params$getApiKaraoke {
    parameter: Parameter$getApiKaraoke;
}
export type ResponseContentType$getApiKaraokeBy_genre = keyof Response$getApiKaraokeBy_genre$Status$200;
export interface Params$getApiKaraokeBy_genre {
    parameter: Parameter$getApiKaraokeBy_genre;
}
export type ResponseContentType$getApiKaraokeGenres = keyof Response$getApiKaraokeGenres$Status$200;
export type ResponseContentType$getApiKaraokeRecommend_singers = keyof Response$getApiKaraokeRecommend_singers$Status$200;
export interface Params$getApiKaraokeRecommend_singers {
    parameter: Parameter$getApiKaraokeRecommend_singers;
}
export type ResponseContentType$getApiKaraokeSearch = keyof Response$getApiKaraokeSearch$Status$200;
export interface Params$getApiKaraokeSearch {
    parameter: Parameter$getApiKaraokeSearch;
}
export type ResponseContentType$getApiKaraokeSingers = keyof Response$getApiKaraokeSingers$Status$200;
export interface Params$getApiKaraokeSingers {
    parameter: Parameter$getApiKaraokeSingers;
}
export type ResponseContentType$getApiLiveBroadcast_result = keyof Response$getApiLiveBroadcast_result$Status$200;
export interface Params$getApiLiveBroadcast_result {
    parameter: Parameter$getApiLiveBroadcast_result;
}
export type RequestContentType$postApiLiveDelete_live_history = keyof RequestBody$postApiLiveDelete_live_history;
export type ResponseContentType$postApiLiveDelete_live_history = keyof Response$postApiLiveDelete_live_history$Status$200;
export interface Params$postApiLiveDelete_live_history {
    requestBody: RequestBody$postApiLiveDelete_live_history["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveKick_out = keyof RequestBody$postApiLiveKick_out;
export type ResponseContentType$postApiLiveKick_out = keyof Response$postApiLiveKick_out$Status$200;
export interface Params$postApiLiveKick_out {
    requestBody: RequestBody$postApiLiveKick_out["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveLive_app_identifier_changed = keyof RequestBody$postApiLiveLive_app_identifier_changed;
export type ResponseContentType$postApiLiveLive_app_identifier_changed = keyof Response$postApiLiveLive_app_identifier_changed$Status$200;
export interface Params$postApiLiveLive_app_identifier_changed {
    requestBody: RequestBody$postApiLiveLive_app_identifier_changed["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveLive_capture_image = keyof RequestBody$postApiLiveLive_capture_image;
export type ResponseContentType$postApiLiveLive_capture_image = keyof Response$postApiLiveLive_capture_image$Status$200;
export interface Params$postApiLiveLive_capture_image {
    requestBody: RequestBody$postApiLiveLive_capture_image["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveLive_end = keyof RequestBody$postApiLiveLive_end;
export type ResponseContentType$postApiLiveLive_end = keyof Response$postApiLiveLive_end$Status$200;
export interface Params$postApiLiveLive_end {
    requestBody: RequestBody$postApiLiveLive_end["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveLive_heartbeat = keyof RequestBody$postApiLiveLive_heartbeat;
export type ResponseContentType$postApiLiveLive_heartbeat = keyof Response$postApiLiveLive_heartbeat$Status$200;
export interface Params$postApiLiveLive_heartbeat {
    requestBody: RequestBody$postApiLiveLive_heartbeat["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveLive_start = keyof RequestBody$postApiLiveLive_start;
export type ResponseContentType$postApiLiveLive_start = keyof Response$postApiLiveLive_start$Status$200;
export interface Params$postApiLiveLive_start {
    requestBody: RequestBody$postApiLiveLive_start["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveUpdate_emomo_visible = keyof RequestBody$postApiLiveUpdate_emomo_visible;
export type ResponseContentType$postApiLiveUpdate_emomo_visible = keyof Response$postApiLiveUpdate_emomo_visible$Status$200;
export interface Params$postApiLiveUpdate_emomo_visible {
    requestBody: RequestBody$postApiLiveUpdate_emomo_visible["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiLiveUpdate_wipe_enabled = keyof RequestBody$postApiLiveUpdate_wipe_enabled;
export type ResponseContentType$postApiLiveUpdate_wipe_enabled = keyof Response$postApiLiveUpdate_wipe_enabled$Status$200;
export interface Params$postApiLiveUpdate_wipe_enabled {
    requestBody: RequestBody$postApiLiveUpdate_wipe_enabled["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiLiveViewers_result = keyof Response$getApiLiveViewers_result$Status$200;
export interface Params$getApiLiveViewers_result {
    parameter: Parameter$getApiLiveViewers_result;
}
export type RequestContentType$postApiLive_gamePing = keyof RequestBody$postApiLive_gamePing;
export type ResponseContentType$postApiLive_gamePing = keyof Response$postApiLive_gamePing$Status$200;
export interface Params$postApiLive_gamePing {
    requestBody: RequestBody$postApiLive_gamePing["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiMissionReceive_login_bonus_reward = keyof RequestBody$postApiMissionReceive_login_bonus_reward;
export type ResponseContentType$postApiMissionReceive_login_bonus_reward = keyof Response$postApiMissionReceive_login_bonus_reward$Status$200;
export interface Params$postApiMissionReceive_login_bonus_reward {
    requestBody: RequestBody$postApiMissionReceive_login_bonus_reward["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiModeratorAdd = keyof RequestBody$postApiModeratorAdd;
export type ResponseContentType$postApiModeratorAdd = keyof Response$postApiModeratorAdd$Status$200;
export interface Params$postApiModeratorAdd {
    requestBody: RequestBody$postApiModeratorAdd["application/x-www-form-urlencoded"];
}
export type RequestContentType$postApiModeratorDelete = keyof RequestBody$postApiModeratorDelete;
export type ResponseContentType$postApiModeratorDelete = keyof Response$postApiModeratorDelete$Status$200;
export interface Params$postApiModeratorDelete {
    requestBody: RequestBody$postApiModeratorDelete["application/x-www-form-urlencoded"];
}
export type ResponseContentType$getApiReward_adOfferwalls = keyof Response$getApiReward_adOfferwalls$Status$200;
export type ResponseContentType$getApiSeason_ratingLive_result = keyof Response$getApiSeason_ratingLive_result$Status$200;
export interface Params$getApiSeason_ratingLive_result {
    parameter: Parameter$getApiSeason_ratingLive_result;
}
export type ResponseContentType$getApiShooterMatching = keyof Response$getApiShooterMatching$Status$200;
export interface Params$getPageLp {
    parameter: Parameter$getPageLp;
}
export type HttpMethod = "GET" | "PUT" | "POST" | "DELETE" | "OPTIONS" | "HEAD" | "PATCH" | "TRACE";
export interface ObjectLike {
    [key: string]: any;
}
export interface QueryParameter {
    value: any;
    style?: "form" | "spaceDelimited" | "pipeDelimited" | "deepObject";
    explode: boolean;
}
export interface QueryParameters {
    [key: string]: QueryParameter;
}
export interface ApiClient<RequestOption> {
    request: (httpMethod: HttpMethod, url: string, headers: ObjectLike | any, requestBody: ObjectLike | any, queryParameters: QueryParameters | undefined, options?: RequestOption) => Promise<any>;
}
export class Client<RequestOption> {
    constructor(private apiClient: ApiClient<RequestOption>, private baseUrl: string) { }
    /** POST log */
    public async postApiAnalyticsLog(params: Params$postApiAnalyticsLog, option?: RequestOption): Promise<Response$postApiAnalyticsLog$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/analytics/log`;
        const headers = {
            "Content-Type": "application/json",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST add_my_app */
    public async postApiAppAdd_my_app(params: Params$postApiAppAdd_my_app, option?: RequestOption): Promise<Response$postApiAppAdd_my_app$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/add_my_app`;
        const headers = {
            "Content-Type": "application/json",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET app_user_detail */
    public async getApiAppApp_user_detail(params: Params$getApiAppApp_user_detail, option?: RequestOption): Promise<Response$getApiAppApp_user_detail$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/app_user_detail`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            app_id: { value: params.parameter.app_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET appeal_banners */
    public async getApiAppAppeal_banners(params: Params$getApiAppAppeal_banners, option?: RequestOption): Promise<Response$getApiAppAppeal_banners$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/appeal_banners`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            app_id: { value: params.parameter.app_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST delete_app_user_detail */
    public async postApiAppDelete_app_user_detail(params: Params$postApiAppDelete_app_user_detail, option?: RequestOption): Promise<Response$postApiAppDelete_app_user_detail$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/delete_app_user_detail`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST delete_my_app */
    public async postApiAppDelete_my_app(params: Params$postApiAppDelete_my_app, option?: RequestOption): Promise<Response$postApiAppDelete_my_app$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/delete_my_app`;
        const headers = {
            "Content-Type": "application/json",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET my_app */
    public async getApiAppMy_app(params: Params$getApiAppMy_app, option?: RequestOption): Promise<Response$getApiAppMy_app$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/my_app`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET onlive_apps */
    public async getApiAppOnlive_apps(option?: RequestOption): Promise<Response$getApiAppOnlive_apps$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/onlive_apps`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST post_app_user_detail */
    public async postApiAppPost_app_user_detail(params: Params$postApiAppPost_app_user_detail, option?: RequestOption): Promise<Response$postApiAppPost_app_user_detail$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/post_app_user_detail`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET recommend_apps */
    public async getApiAppRecommend_apps(option?: RequestOption): Promise<Response$getApiAppRecommend_apps$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/recommend_apps`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET search */
    public async getApiAppSearch(params: Params$getApiAppSearch, option?: RequestOption): Promise<Response$getApiAppSearch$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/search`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            recommend_by: { value: params.parameter.recommend_by, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET user_apps */
    public async getApiAppUser_apps(params: Params$getApiAppUser_apps, option?: RequestOption): Promise<Response$getApiAppUser_apps$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/app/user_apps`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET completed_mission */
    public async getApiCampaignCompleted_mission(params: Params$getApiCampaignCompleted_mission, option?: RequestOption): Promise<Response$getApiCampaignCompleted_mission$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/campaign/completed_mission`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            id: { value: params.parameter.id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET detail */
    public async getApiCampaignDetail(params: Params$getApiCampaignDetail, option?: RequestOption): Promise<Response$getApiCampaignDetail$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/campaign/detail`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            id: { value: params.parameter.id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET banners */
    public async getApiCatalogBanners(params: Params$getApiCatalogBanners, option?: RequestOption): Promise<Response$getApiCatalogBanners$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/catalog/banners`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            tab_id: { value: params.parameter.tab_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET follow */
    public async getApiCatalogFollow(option?: RequestOption): Promise<Response$getApiCatalogFollow$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/catalog/follow`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET lives */
    public async getApiCatalogLives(params: Params$getApiCatalogLives, option?: RequestOption): Promise<Response$getApiCatalogLives$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/catalog/lives`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            tab_id: { value: params.parameter.tab_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET myapp_recommend_lives */
    public async getApiCatalogMyapp_recommend_lives(option?: RequestOption): Promise<Response$getApiCatalogMyapp_recommend_lives$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/catalog/myapp_recommend_lives`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET tabs */
    public async getApiCatalogTabs(option?: RequestOption): Promise<Response$getApiCatalogTabs$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/catalog/tabs`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST join */
    public async postApiChatJoin(params: Params$postApiChatJoin, option?: RequestOption): Promise<Response$postApiChatJoin$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/join`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST post_text */
    public async postApiChatPost_text(params: Params$postApiChatPost_text, option?: RequestOption): Promise<Response$postApiChatPost_text$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/post_text`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST read */
    public async postApiChatRead(params: Params$postApiChatRead, option?: RequestOption): Promise<Response$postApiChatRead$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/read`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET thread */
    public async getApiChatThread(params: Params$getApiChatThread, option?: RequestOption): Promise<Response$getApiChatThread$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/thread`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST thread_visibility */
    public async postApiChatThread_visibility(params: Params$postApiChatThread_visibility, option?: RequestOption): Promise<Response$postApiChatThread_visibility$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/thread_visibility`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET threads */
    public async getApiChatThreads(params: Params$getApiChatThreads, option?: RequestOption): Promise<Response$getApiChatThreads$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/threads`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET avatar */
    public async getApiClosetAvatar(params: Params$getApiClosetAvatar, option?: RequestOption): Promise<Response$getApiClosetAvatar$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/closet/avatar`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET avatar_parts */
    public async getApiClosetAvatar_parts(option?: RequestOption): Promise<Response$getApiClosetAvatar_parts$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/closet/avatar_parts`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET closets */
    public async getApiClosetClosets(option?: RequestOption): Promise<Response$getApiClosetClosets$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/closet/closets`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST update_closet_avatar */
    public async postApiClosetUpdate_closet_avatar(params: Params$postApiClosetUpdate_closet_avatar, option?: RequestOption): Promise<Response$postApiClosetUpdate_closet_avatar$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/closet/update_closet_avatar`;
        const headers = {
            "Content-Type": "application/json",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST update_closet_images */
    public async postApiClosetUpdate_closet_images(params: Params$postApiClosetUpdate_closet_images, option?: RequestOption): Promise<Response$postApiClosetUpdate_closet_images$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/closet/update_closet_images`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET status */
    public async getApiCoin_boxStatus(params: Params$getApiCoin_boxStatus, option?: RequestOption): Promise<Response$getApiCoin_boxStatus$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/coin_box/status`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET collaborating_users */
    public async getApiCollabCollaborating_users(params: Params$getApiCollabCollaborating_users, option?: RequestOption): Promise<Response$getApiCollabCollaborating_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/collab/collaborating_users`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET summary */
    public async getApiContractSummary(option?: RequestOption): Promise<Response$getApiContractSummary$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/contract/summary`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET notice */
    public async getApiEventNotice(params: Params$getApiEventNotice, option?: RequestOption): Promise<Response$getApiEventNotice$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/event/notice`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            type: { value: params.parameter.type, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST register_device_token */
    public async postApiFeatureRegister_device_token(params: Params$postApiFeatureRegister_device_token, option?: RequestOption): Promise<Response$postApiFeatureRegister_device_token$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/feature/register_device_token`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET emomo_run_gifts */
    public async getApiGiftEmomo_run_gifts(option?: RequestOption): Promise<Response$getApiGiftEmomo_run_gifts$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/emomo_run_gifts`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET panels */
    public async getApiGiftPanels(params: Params$getApiGiftPanels, option?: RequestOption): Promise<Response$getApiGiftPanels$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/panels`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET ranking */
    public async getApiGiftRanking(params: Params$getApiGiftRanking, option?: RequestOption): Promise<Response$getApiGiftRanking$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/ranking`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false },
            type: { value: params.parameter.type, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST send */
    public async postApiGiftSend(params: Params$postApiGiftSend, option?: RequestOption): Promise<Response$postApiGiftSend$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/send`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET unique_emomo_gift_config */
    public async getApiGiftUnique_emomo_gift_config(option?: RequestOption): Promise<Response$getApiGiftUnique_emomo_gift_config$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/unique_emomo_gift_config`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET unique_emomo_gift_slots */
    public async getApiGiftUnique_emomo_gift_slots(option?: RequestOption): Promise<Response$getApiGiftUnique_emomo_gift_slots$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/unique_emomo_gift_slots`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST update_simple_unique_emomo_gift */
    public async postApiGiftUpdate_simple_unique_emomo_gift(params: Params$postApiGiftUpdate_simple_unique_emomo_gift, option?: RequestOption): Promise<Response$postApiGiftUpdate_simple_unique_emomo_gift$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/update_simple_unique_emomo_gift`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST read */
    public async postApiGift_appeal_popupRead(params: Params$postApiGift_appeal_popupRead, option?: RequestOption): Promise<Response$postApiGift_appeal_popupRead$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift_appeal_popup/read`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST connect */
    public async postApiGoogleConnect(params: Params$postApiGoogleConnect, option?: RequestOption): Promise<Response$postApiGoogleConnect$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/google/connect`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST disconnect */
    public async postApiGoogleDisconnect(option?: RequestOption): Promise<Response$postApiGoogleDisconnect$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/google/disconnect`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, undefined, undefined, option);
    }
    /** POST block */
    public async postApiGraphBlock(params: Params$postApiGraphBlock, option?: RequestOption): Promise<Response$postApiGraphBlock$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/block`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET blocked_users */
    public async getApiGraphBlocked_users(params: Params$getApiGraphBlocked_users, option?: RequestOption): Promise<Response$getApiGraphBlocked_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/blocked_users`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST follow */
    public async postApiGraphFollow(params: Params$postApiGraphFollow, option?: RequestOption): Promise<Response$postApiGraphFollow$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/follow`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET followers */
    public async getApiGraphFollowers(params: Params$getApiGraphFollowers, option?: RequestOption): Promise<Response$getApiGraphFollowers$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/followers`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET followings */
    public async getApiGraphFollowings(params: Params$getApiGraphFollowings, option?: RequestOption): Promise<Response$getApiGraphFollowings$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/followings`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET recommend_users */
    public async getApiGraphRecommend_users(params: Params$getApiGraphRecommend_users, option?: RequestOption): Promise<Response$getApiGraphRecommend_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/recommend_users`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET search */
    public async getApiGraphSearch(params: Params$getApiGraphSearch, option?: RequestOption): Promise<Response$getApiGraphSearch$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/search`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST unblock */
    public async postApiGraphUnblock(params: Params$postApiGraphUnblock, option?: RequestOption): Promise<Response$postApiGraphUnblock$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/unblock`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST unfollow */
    public async postApiGraphUnfollow(params: Params$postApiGraphUnfollow, option?: RequestOption): Promise<Response$postApiGraphUnfollow$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/unfollow`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST edit */
    public async postApiGroupEdit(params: Params$postApiGroupEdit, option?: RequestOption): Promise<Response$postApiGroupEdit$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/group/edit`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST invite_users */
    public async postApiGroupInvite_users(params: Params$postApiGroupInvite_users, option?: RequestOption): Promise<Response$postApiGroupInvite_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/group/invite_users`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST leave */
    public async postApiGroupLeave(params: Params$postApiGroupLeave, option?: RequestOption): Promise<Response$postApiGroupLeave$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/group/leave`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET users */
    public async getApiGroupUsers(params: Params$getApiGroupUsers, option?: RequestOption): Promise<Response$getApiGroupUsers$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/group/users`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            group_id: { value: params.parameter.group_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET appeal_links */
    public async getApiLiveAppeal_links(params: Params$getApiLiveAppeal_links, option?: RequestOption): Promise<Response$getApiLiveAppeal_links$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/appeal_links`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET campaign */
    public async getApiLiveCampaign(params: Params$getApiLiveCampaign, option?: RequestOption): Promise<Response$getApiLiveCampaign$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/campaign`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET get_streaming_url */
    public async getApiLiveGet_streaming_url(params: Params$getApiLiveGet_streaming_url, option?: RequestOption): Promise<Response$getApiLiveGet_streaming_url$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/get_streaming_url`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST leave */
    public async postApiLiveLeave(params: Params$postApiLiveLeave, option?: RequestOption): Promise<Response$postApiLiveLeave$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/leave`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET live */
    public async getApiLiveLive(params: Params$getApiLiveLive, option?: RequestOption): Promise<Response$getApiLiveLive$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST live_comment */
    public async postApiLiveLive_comment(params: Params$postApiLiveLive_comment, option?: RequestOption): Promise<Response$postApiLiveLive_comment$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_comment`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET live_comments */
    public async getApiLiveLive_comments(params: Params$getApiLiveLive_comments, option?: RequestOption): Promise<Response$getApiLiveLive_comments$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_comments`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST live_create */
    public async postApiLiveLive_create(option?: RequestOption): Promise<Response$postApiLiveLive_create$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_create`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, undefined, undefined, option);
    }
    /** POST live_edit */
    public async postApiLiveLive_edit(params: Params$postApiLiveLive_edit, option?: RequestOption): Promise<Response$postApiLiveLive_edit$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_edit`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET live_game_catalog */
    public async getApiLiveLive_game_catalog(params: Params$getApiLiveLive_game_catalog, option?: RequestOption): Promise<Response$getApiLiveLive_game_catalog$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_game_catalog`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_game_id: { value: params.parameter.live_game_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET live_history */
    public async getApiLiveLive_history(params: Params$getApiLiveLive_history, option?: RequestOption): Promise<Response$getApiLiveLive_history$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_history`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST live_polling */
    public async postApiLiveLive_polling(params: Params$postApiLiveLive_polling, option?: RequestOption): Promise<Response$postApiLiveLive_polling$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_polling`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET online_users */
    public async getApiLiveOnline_users(params: Params$getApiLiveOnline_users, option?: RequestOption): Promise<Response$getApiLiveOnline_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/online_users`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false },
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST preview_end */
    public async postApiLivePreview_end(params: Params$postApiLivePreview_end, option?: RequestOption): Promise<Response$postApiLivePreview_end$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/preview_end`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST preview_polling */
    public async postApiLivePreview_polling(params: Params$postApiLivePreview_polling, option?: RequestOption): Promise<Response$postApiLivePreview_polling$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/preview_polling`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST preview_start */
    public async postApiLivePreview_start(params: Params$postApiLivePreview_start, option?: RequestOption): Promise<Response$postApiLivePreview_start$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/preview_start`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST sanitize_text */
    public async postApiLiveSanitize_text(params: Params$postApiLiveSanitize_text, option?: RequestOption): Promise<Response$postApiLiveSanitize_text$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/sanitize_text`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET search */
    public async getApiLiveSearch(params: Params$getApiLiveSearch, option?: RequestOption): Promise<Response$getApiLiveSearch$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/search`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            q: { value: params.parameter.q, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST update_archive_settings */
    public async postApiLiveUpdate_archive_settings(params: Params$postApiLiveUpdate_archive_settings, option?: RequestOption): Promise<Response$postApiLiveUpdate_archive_settings$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/update_archive_settings`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET view_history */
    public async getApiLiveView_history(option?: RequestOption): Promise<Response$getApiLiveView_history$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/view_history`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST end */
    public async postApiLive_gameEnd(params: Params$postApiLive_gameEnd, option?: RequestOption): Promise<Response$postApiLive_gameEnd$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live_game/end`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET list */
    public async getApiLive_gameList(option?: RequestOption): Promise<Response$getApiLive_gameList$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live_game/list`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET new_counts */
    public async getApiLive_gameNew_counts(params: Params$getApiLive_gameNew_counts, option?: RequestOption): Promise<Response$getApiLive_gameNew_counts$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live_game/new_counts`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_games: { value: params.parameter.live_games, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST start */
    public async postApiLive_gameStart(params: Params$postApiLive_gameStart, option?: RequestOption): Promise<Response$postApiLive_gameStart$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live_game/start`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET current_login_bonus */
    public async getApiMissionCurrent_login_bonus(option?: RequestOption): Promise<Response$getApiMissionCurrent_login_bonus$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/mission/current_login_bonus`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET daily */
    public async getApiMissionDaily(option?: RequestOption): Promise<Response$getApiMissionDaily$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/mission/daily`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET status */
    public async getApiMissionStatus(option?: RequestOption): Promise<Response$getApiMissionStatus$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/mission/status`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET tutorial_status */
    public async getApiMissionTutorial_status(option?: RequestOption): Promise<Response$getApiMissionTutorial_status$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/mission/tutorial_status`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET weekly */
    public async getApiMissionWeekly(option?: RequestOption): Promise<Response$getApiMissionWeekly$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/mission/weekly`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET campaigns */
    public async getApiNoticeCampaigns(params: Params$getApiNoticeCampaigns, option?: RequestOption): Promise<Response$getApiNoticeCampaigns$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notice/campaigns`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            category: { value: params.parameter.category, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET counts */
    public async getApiNoticeCounts(params: Params$getApiNoticeCounts, option?: RequestOption): Promise<Response$getApiNoticeCounts$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notice/counts`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            recommend_campaigns: { value: params.parameter.recommend_campaigns, explode: false },
            chat: { value: params.parameter.chat, explode: false },
            app_campaigns: { value: params.parameter.app_campaigns, explode: false },
            present_boxes: { value: params.parameter.present_boxes, explode: false },
            emomo_campaigns: { value: params.parameter.emomo_campaigns, explode: false },
            news: { value: params.parameter.news, explode: false },
            followee_lives: { value: params.parameter.followee_lives, explode: false },
            yours: { value: params.parameter.yours, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET news */
    public async getApiNoticeNews(option?: RequestOption): Promise<Response$getApiNoticeNews$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notice/news`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET popups */
    public async getApiNoticePopups(params: Params$getApiNoticePopups, option?: RequestOption): Promise<Response$getApiNoticePopups$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notice/popups`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            position: { value: params.parameter.position, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET present_boxes */
    public async getApiNoticePresent_boxes(option?: RequestOption): Promise<Response$getApiNoticePresent_boxes$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notice/present_boxes`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET yours_v2 */
    public async getApiNoticeYours_v2(option?: RequestOption): Promise<Response$getApiNoticeYours_v2$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notice/yours_v2`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET push_settings_v3 */
    public async getApiNotificationPush_settings_v3(option?: RequestOption): Promise<Response$getApiNotificationPush_settings_v3$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notification/push_settings_v3`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST push_settings_v3 */
    public async postApiNotificationPush_settings_v3(params: Params$postApiNotificationPush_settings_v3, option?: RequestOption): Promise<Response$postApiNotificationPush_settings_v3$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/notification/push_settings_v3`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET focusable */
    public async getApiRankingFocusable(option?: RequestOption): Promise<Response$getApiRankingFocusable$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/ranking/focusable`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET user_detail */
    public async getApiRankingUser_detail(params: Params$getApiRankingUser_detail, option?: RequestOption): Promise<Response$getApiRankingUser_detail$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/ranking/user_detail`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET available_reward_ad_ids */
    public async getApiReward_adAvailable_reward_ad_ids(params: Params$getApiReward_adAvailable_reward_ad_ids, option?: RequestOption): Promise<Response$getApiReward_adAvailable_reward_ad_ids$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/reward_ad/available_reward_ad_ids`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            mode: { value: params.parameter.mode, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET check_available_device */
    public async getApiReward_adCheck_available_device(option?: RequestOption): Promise<Response$getApiReward_adCheck_available_device$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/reward_ad/check_available_device`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST complete */
    public async postApiReward_adComplete(params: Params$postApiReward_adComplete, option?: RequestOption): Promise<Response$postApiReward_adComplete$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/reward_ad/complete`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET status */
    public async getApiSeason_ratingStatus(params: Params$getApiSeason_ratingStatus, option?: RequestOption): Promise<Response$getApiSeason_ratingStatus$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/season_rating/status`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET status */
    public async getApiSeason_yellStatus(params: Params$getApiSeason_yellStatus, option?: RequestOption): Promise<Response$getApiSeason_yellStatus$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/season_yell/status`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false },
            streamer_id: { value: params.parameter.streamer_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET viewers */
    public async getApiSeason_yellViewers(params: Params$getApiSeason_yellViewers, option?: RequestOption): Promise<Response$getApiSeason_yellViewers$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/season_yell/viewers`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET start_live_button */
    public async getApiTooltipStart_live_button(option?: RequestOption): Promise<Response$getApiTooltipStart_live_button$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/tooltip/start_live_button`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST bad_report */
    public async postApiUserBad_report(params: Params$postApiUserBad_report, option?: RequestOption): Promise<Response$postApiUserBad_report$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/bad_report`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET broadcast_settings */
    public async getApiUserBroadcast_settings(option?: RequestOption): Promise<Response$getApiUserBroadcast_settings$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/broadcast_settings`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST check_minor */
    public async postApiUserCheck_minor(params: Params$postApiUserCheck_minor, option?: RequestOption): Promise<Response$postApiUserCheck_minor$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/check_minor`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET currency */
    public async getApiUserCurrency(option?: RequestOption): Promise<Response$getApiUserCurrency$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/currency`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST date_of_birth */
    public async postApiUserDate_of_birth(params: Params$postApiUserDate_of_birth, option?: RequestOption): Promise<Response$postApiUserDate_of_birth$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/date_of_birth`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST delete_live_announcement */
    public async postApiUserDelete_live_announcement(option?: RequestOption): Promise<Response$postApiUserDelete_live_announcement$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/delete_live_announcement`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, undefined, undefined, option);
    }
    /** GET favorite_live_setting */
    public async getApiUserFavorite_live_setting(option?: RequestOption): Promise<Response$getApiUserFavorite_live_setting$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/favorite_live_setting`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST logout */
    public async postApiUserLogout(option?: RequestOption): Promise<Response$postApiUserLogout$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/logout`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, undefined, undefined, option);
    }
    /** GET me */
    public async getApiUserMe(option?: RequestOption): Promise<Response$getApiUserMe$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/me`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST post_live_announcement */
    public async postApiUserPost_live_announcement(params: Params$postApiUserPost_live_announcement, option?: RequestOption): Promise<Response$postApiUserPost_live_announcement$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/post_live_announcement`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST post_live_request */
    public async postApiUserPost_live_request(params: Params$postApiUserPost_live_request, option?: RequestOption): Promise<Response$postApiUserPost_live_request$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/post_live_request`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST post_review_confirmation */
    public async postApiUserPost_review_confirmation(params: Params$postApiUserPost_review_confirmation, option?: RequestOption): Promise<Response$postApiUserPost_review_confirmation$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/post_review_confirmation`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET profile */
    public async getApiUserProfile(params: Params$getApiUserProfile, option?: RequestOption): Promise<Response$getApiUserProfile$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/profile`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            user_id: { value: params.parameter.user_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST profile_edit */
    public async postApiUserProfile_edit(params: Params$postApiUserProfile_edit, option?: RequestOption): Promise<Response$postApiUserProfile_edit$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/profile_edit`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET search */
    public async getApiUserSearch(params: Params$getApiUserSearch, option?: RequestOption): Promise<Response$getApiUserSearch$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/search`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            q: { value: params.parameter.q, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET setting_root */
    public async getApiUserSetting_root(option?: RequestOption): Promise<Response$getApiUserSetting_root$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/setting_root`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET tos */
    public async getApiUserTos(option?: RequestOption): Promise<Response$getApiUserTos$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/tos`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** POST update_favorite_live_setting */
    public async postApiUserUpdate_favorite_live_setting(params: Params$postApiUserUpdate_favorite_live_setting, option?: RequestOption): Promise<Response$postApiUserUpdate_favorite_live_setting$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/update_favorite_live_setting`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST update_recording_settings */
    public async postApiUserUpdate_recording_settings(params: Params$postApiUserUpdate_recording_settings, option?: RequestOption): Promise<Response$postApiUserUpdate_recording_settings$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/update_recording_settings`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST use_favorite_live_setting */
    public async postApiUserUse_favorite_live_setting(params: Params$postApiUserUse_favorite_live_setting, option?: RequestOption): Promise<Response$postApiUserUse_favorite_live_setting$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/use_favorite_live_setting`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET watchword */
    public async getApiUserWatchword(option?: RequestOption): Promise<Response$getApiUserWatchword$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/user/watchword`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET register */
    public async getLpWatchwordRegister(option?: RequestOption): Promise<void> {
        const url = this.baseUrl + `/lp/watchword/register`;
        const headers = {};
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET popup */
    public async getNoticePopup(params: Params$getNoticePopup, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + `/notice/popup`;
        const headers = {};
        const queryParameters: QueryParameters = {
            obfuscated_user_id: { value: params.parameter.obfuscated_user_id, explode: false },
            id: { value: params.parameter.id, explode: false },
            new_popup: { value: params.parameter.new_popup, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST agree */
    public async postApiChatAgree(params: Params$postApiChatAgree, option?: RequestOption): Promise<Response$postApiChatAgree$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/agree`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST post_thanks */
    public async postApiChatPost_thanks(params: Params$postApiChatPost_thanks, option?: RequestOption): Promise<Response$postApiChatPost_thanks$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/post_thanks`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST post_thanks_to_live_watched_users */
    public async postApiChatPost_thanks_to_live_watched_users(params: Params$postApiChatPost_thanks_to_live_watched_users, option?: RequestOption): Promise<Response$postApiChatPost_thanks_to_live_watched_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/chat/post_thanks_to_live_watched_users`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST close */
    public async postApiCollabClose(params: Params$postApiCollabClose, option?: RequestOption): Promise<Response$postApiCollabClose$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/collab/close`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET connected_streaming_collab_lives */
    public async getApiCollabConnected_streaming_collab_lives(params: Params$getApiCollabConnected_streaming_collab_lives, option?: RequestOption): Promise<Response$getApiCollabConnected_streaming_collab_lives$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/collab/connected_streaming_collab_lives`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET invitable_users */
    public async getApiCollabInvitable_users(params: Params$getApiCollabInvitable_users, option?: RequestOption): Promise<Response$getApiCollabInvitable_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/collab/invitable_users`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false },
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST invite */
    public async postApiCollabInvite(params: Params$postApiCollabInvite, option?: RequestOption): Promise<Response$postApiCollabInvite$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/collab/invite`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST send_to_peer */
    public async postApiCollabSend_to_peer(params: Params$postApiCollabSend_to_peer, option?: RequestOption): Promise<Response$postApiCollabSend_to_peer$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/collab/send_to_peer`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST start */
    public async postApiCollabStart(params: Params$postApiCollabStart, option?: RequestOption): Promise<Response$postApiCollabStart$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/collab/start`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST update_rich_unique_emomo_gift */
    public async postApiGiftUpdate_rich_unique_emomo_gift(params: Params$postApiGiftUpdate_rich_unique_emomo_gift, option?: RequestOption): Promise<Response$postApiGiftUpdate_rich_unique_emomo_gift$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift/update_rich_unique_emomo_gift`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET user_stocks */
    public async getApiGift_gachaUser_stocks(params: Params$getApiGift_gachaUser_stocks, option?: RequestOption): Promise<Response$getApiGift_gachaUser_stocks$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/gift_gacha/user_stocks`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST follow_live_watched_users */
    public async postApiGraphFollow_live_watched_users(params: Params$postApiGraphFollow_live_watched_users, option?: RequestOption): Promise<Response$postApiGraphFollow_live_watched_users$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/graph/follow_live_watched_users`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET karaoke */
    public async getApiKaraoke(params: Params$getApiKaraoke, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + `/api/karaoke//`;
        const headers = {};
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false },
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET by_genre */
    public async getApiKaraokeBy_genre(params: Params$getApiKaraokeBy_genre, option?: RequestOption): Promise<Response$getApiKaraokeBy_genre$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/karaoke/by_genre`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false },
            genre_id: { value: params.parameter.genre_id, explode: false },
            where: { value: params.parameter.where, explode: false },
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET genres */
    public async getApiKaraokeGenres(option?: RequestOption): Promise<Response$getApiKaraokeGenres$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/karaoke/genres`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET recommend_singers */
    public async getApiKaraokeRecommend_singers(params: Params$getApiKaraokeRecommend_singers, option?: RequestOption): Promise<Response$getApiKaraokeRecommend_singers$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/karaoke/recommend_singers`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET search */
    public async getApiKaraokeSearch(params: Params$getApiKaraokeSearch, option?: RequestOption): Promise<Response$getApiKaraokeSearch$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/karaoke/search`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            q: { value: params.parameter.q, explode: false },
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET singers */
    public async getApiKaraokeSingers(params: Params$getApiKaraokeSingers, option?: RequestOption): Promise<Response$getApiKaraokeSingers$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/karaoke/singers`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            page: { value: params.parameter.page, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET broadcast_result */
    public async getApiLiveBroadcast_result(params: Params$getApiLiveBroadcast_result, option?: RequestOption): Promise<Response$getApiLiveBroadcast_result$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/broadcast_result`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST delete_live_history */
    public async postApiLiveDelete_live_history(params: Params$postApiLiveDelete_live_history, option?: RequestOption): Promise<Response$postApiLiveDelete_live_history$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/delete_live_history`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST kick_out */
    public async postApiLiveKick_out(params: Params$postApiLiveKick_out, option?: RequestOption): Promise<Response$postApiLiveKick_out$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/kick_out`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST live_app_identifier_changed */
    public async postApiLiveLive_app_identifier_changed(params: Params$postApiLiveLive_app_identifier_changed, option?: RequestOption): Promise<Response$postApiLiveLive_app_identifier_changed$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_app_identifier_changed`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST live_capture_image */
    public async postApiLiveLive_capture_image(params: Params$postApiLiveLive_capture_image, option?: RequestOption): Promise<Response$postApiLiveLive_capture_image$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_capture_image`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST live_end */
    public async postApiLiveLive_end(params: Params$postApiLiveLive_end, option?: RequestOption): Promise<Response$postApiLiveLive_end$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_end`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST live_heartbeat */
    public async postApiLiveLive_heartbeat(params: Params$postApiLiveLive_heartbeat, option?: RequestOption): Promise<Response$postApiLiveLive_heartbeat$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_heartbeat`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST live_start */
    public async postApiLiveLive_start(params: Params$postApiLiveLive_start, option?: RequestOption): Promise<Response$postApiLiveLive_start$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/live_start`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST update_emomo_visible */
    public async postApiLiveUpdate_emomo_visible(params: Params$postApiLiveUpdate_emomo_visible, option?: RequestOption): Promise<Response$postApiLiveUpdate_emomo_visible$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/update_emomo_visible`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST update_wipe_enabled */
    public async postApiLiveUpdate_wipe_enabled(params: Params$postApiLiveUpdate_wipe_enabled, option?: RequestOption): Promise<Response$postApiLiveUpdate_wipe_enabled$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/update_wipe_enabled`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET viewers_result */
    public async getApiLiveViewers_result(params: Params$getApiLiveViewers_result, option?: RequestOption): Promise<Response$getApiLiveViewers_result$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live/viewers_result`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** POST ping */
    public async postApiLive_gamePing(params: Params$postApiLive_gamePing, option?: RequestOption): Promise<Response$postApiLive_gamePing$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/live_game/ping`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST receive_login_bonus_reward */
    public async postApiMissionReceive_login_bonus_reward(params: Params$postApiMissionReceive_login_bonus_reward, option?: RequestOption): Promise<Response$postApiMissionReceive_login_bonus_reward$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/mission/receive_login_bonus_reward`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST moderator add */
    public async postApiModeratorAdd(params: Params$postApiModeratorAdd, option?: RequestOption): Promise<Response$postApiModeratorAdd$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/moderator/add`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** POST moderator delete */
    public async postApiModeratorDelete(params: Params$postApiModeratorDelete, option?: RequestOption): Promise<Response$postApiModeratorDelete$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/moderator/delete`;
        const headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            Accept: "application/json"
        };
        return this.apiClient.request("POST", url, headers, params.requestBody, undefined, option);
    }
    /** GET offerwalls */
    public async getApiReward_adOfferwalls(option?: RequestOption): Promise<Response$getApiReward_adOfferwalls$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/reward_ad/offerwalls`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET live_result */
    public async getApiSeason_ratingLive_result(params: Params$getApiSeason_ratingLive_result, option?: RequestOption): Promise<Response$getApiSeason_ratingLive_result$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/season_rating/live_result`;
        const headers = {
            Accept: "application/json"
        };
        const queryParameters: QueryParameters = {
            live_id: { value: params.parameter.live_id, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
    /** GET matching */
    public async getApiShooterMatching(option?: RequestOption): Promise<Response$getApiShooterMatching$Status$200["application/json"]> {
        const url = this.baseUrl + `/api/shooter/matching`;
        const headers = {
            Accept: "application/json"
        };
        return this.apiClient.request("GET", url, headers, undefined, undefined, option);
    }
    /** GET lp */
    public async getPageLp(params: Params$getPageLp, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + `/page/lp`;
        const headers = {};
        const queryParameters: QueryParameters = {
            path: { value: params.parameter.path, explode: false }
        };
        return this.apiClient.request("GET", url, headers, undefined, queryParameters, option);
    }
}
